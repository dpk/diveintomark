<?xml version="1.0"?>
<feed xmlns:media="http://search.yahoo.com/mrss/" xmlns:gr="http://www.google.com/schemas/reader/atom/" xmlns:idx="urn:atom-extension:indexing" xmlns="http://www.w3.org/2005/Atom" idx:index="no" gr:dir="ltr">
<!--
Content-type: Preventing XSRF in IE.

-->
	<generator uri="http://www.google.com/reader">
		Google Reader
	</generator>
	<id>
		tag:google.com,2005:reader/feed/http://diveintomark.org/feed
	</id>
	<title>
		dive into mark
	</title>
	<subtitle type="html">
		once again between addictions
	</subtitle>
	<gr:continuation>
		CParvN7LzZcC
	</gr:continuation>
	<link rel="self" href="http://www.google.com/reader/atom/feed/http://diveintomark.org/feed?c=CJv-tNOfiKAC" /><link rel="alternate" href="http://diveintomark.org/" type="text/html" />
	<updated>
		2010-02-23T10:26:09Z
	</updated>
	<entry gr:is-read-state-locked="true" gr:crawl-timestamp-msec="1266920769535">
		<id gr:original-id="tag:diveintomark.org,2010-02-23:/archives/20100223062243">
			tag:google.com,2005:reader/item/cf8158a5680d3925
		</id>
		<category term="user/16823450566733491518/state/com.google/read" scheme="http://www.google.com/reader/" label="read" /><category term="user/16823450566733491518/state/com.google/reading-list" scheme="http://www.google.com/reader/" label="reading-list" /><category term="unfiled" scheme="http://diveintomark.org" /><category term="lighthouse" scheme="http://diveintomark.org" /><category term="personal" scheme="http://diveintomark.org" />
		<title type="html">
			Simplicity is hard. Let’s go shopping!
		</title>
		<published>
			2010-02-23T06:22:43Z
		</published>
		<updated>
			2010-02-26T05:40:58Z
		</updated>
		<link rel="alternate" href="http://diveintomark.org/archives/2010/02/23/simplicity-is-hard-lets-go-shopping" type="text/html" />
		<content xml:base="http://diveintomark.org/archives/2010/02/23/simplicity-is-hard-lets-go-shopping" xml:lang="en" type="html">
			&lt;p&gt;As part of my &lt;a href="http://diveintomark.org/archives/2008/11/03/the-pursuit-of-happiness"&gt;pursuit of happiness&lt;/a&gt;, I have been steadily &lt;a href="http://diveintomark.org/archives/2008/01/24/attachments-2"&gt;shedding attachments&lt;/a&gt;, getting rid of things I don’t use, &lt;a href="http://mark.pilgrim.usesthis.com/"&gt;thinking about ways of keeping the things I do use longer&lt;/a&gt;, and just generally being a pain in the ass. This, for instance, is an actual conversation I had with my wife last fall:&lt;/p&gt; &lt;blockquote&gt; &lt;p&gt;Herself: What do you want for your birthday?&lt;/p&gt; &lt;p&gt;Myself: Nothing.&lt;/p&gt; &lt;p&gt;Her: You’re impossible to shop for.&lt;/p&gt; &lt;p&gt;Me: Actually, I want less than that. I want you to let me sell my car and replace it with nothing.&lt;/p&gt; &lt;p&gt;Her: Be realistic. We live in the suburbs.&lt;/p&gt; &lt;p&gt;Me: I have a bike.&lt;/p&gt; &lt;p&gt;Her: But what if my van breaks down?&lt;/p&gt; &lt;p&gt;Me: We have AAA.&lt;/p&gt; &lt;p&gt;Her: It would still put a huge burden on me if we only had one vehicle.&lt;/p&gt; &lt;p&gt;Me: That’s why it’s called a “gift.”&lt;/p&gt; &lt;p&gt;Her: You’re getting restaurant gift cards. And socks.&lt;/p&gt; &lt;p&gt;Me: I don’t need socks.&lt;/p&gt; &lt;/blockquote&gt; &lt;p&gt;Apropos of nothing, I would just like to point out that the title of this post is a &lt;a href="http://en.wikipedia.org/wiki/Snowclone"&gt;snowclone&lt;/a&gt;, which itself is a word that I learned in the process of researching the exact wording of the original phrase of which it is a snowclone (“Math is hard. Let’s go shopping!” from &lt;a href="http://en.wikipedia.org/wiki/Barbie#Controversies"&gt;Teen Talk Barbie&lt;/a&gt; circa 1992). Not knowing whether I should write “simplicity is hard” or “simplicity is tough,” I searched Google for &lt;a href="http://www.google.com/search?&amp;amp;ie=UTF-8&amp;amp;q=%22let&amp;#39;s+go+shopping%22+math+barbie"&gt;“let’s go shopping” math barbie&lt;/a&gt;, and the first result was a Language Log article called &lt;a href="http://itre.cis.upenn.edu/~myl/languagelog/archives/002892.html"&gt;Tracking snowclones is hard. Let’s go shopping!&lt;/a&gt; which is both self-referential in the obvious sense, and also wonderfully meta-referential in that Language Log &lt;a href="http://itre.cis.upenn.edu/~myl/languagelog/archives/000350.html"&gt;was instrumental in coining the word “snowclone”&lt;/a&gt; in the first place, but now can not possibly keep track of the snowclones, as seen by the lengthy update to that very post “added for those who find this via the Wikipedia entry for ‘snowclone’,” which would be… me. And damn it, now I’ve spent the last two hours on a &lt;a href="http://tvtropes.org/pmwiki/pmwiki.php/Main/WikiWalk"&gt;wiki walk&lt;/a&gt;. (And &lt;em&gt;now&lt;/em&gt; I’ve (re)introduced you to TvTropes, so, you know, there goes your evening and most of your night. Try to come up for air before dawn.)&lt;/p&gt; &lt;p&gt;My point, such that I have one, is that simplicity is easy to describe but difficult to achieve. Especially (though not exclusively) when there are other people in your life. While I applaud &lt;a href="http://www.telegraph.co.uk/news/worldnews/europe/austria/7190750/Millionaire-gives-away-fortune-that-made-him-miserable.html"&gt;millionaires who decide to give away all their money&lt;/a&gt; (I say “their” money instead of “his” money, since even if he made the bulk of it, I can’t imagine him being able to give it away without his wife’s consent), the reality at home is more droll. Take, for instance, the television in our bedroom. It is small, as televisions go, costing no more than $100. It was once hooked up to a &lt;abbr&gt;DVD&lt;/abbr&gt; player, which itself cost less than $50. Our children used to congregate in our bedroom after bath and before bed and watch 10 or 15 minutes worth of a movie or Sesame Street or some similar passive entertainment. I say “used to,” because in truth they stopped doing that about a year ago. No particular reason, just changing patterns. I pointed out to my wife that this would be a perfect opportunity to simplify by getting rid of the television and replacing it with nothing. That conversation went something like this:&lt;/p&gt; &lt;blockquote&gt; &lt;p&gt;Myself: Can we get rid of this television?&lt;/p&gt; &lt;p&gt;Herself: No.&lt;/p&gt; &lt;p&gt;Me: But we never use it anymore.&lt;/p&gt; &lt;p&gt;Her: I’m sure that’s not true.&lt;/p&gt; &lt;/blockquote&gt; &lt;p&gt;So I did what any self-respecting scientist would do when faced with an untested hypothesis: I devised a test. Which is to say, I unplugged it. The television. The power cord winds its way to a wall socket behind a dresser, which itself has to be moved in order to get at the socket, so my trickery was both non-obvious and difficult to counteract even if one should notice it. Which, of course, no one did. So there it sat, unused and unplugged, for over six months. Until one day, or rather one night, when we found ourselves in an old familiar situation — kids in pajamas, jumping on the bed, and so on — and my wife actually tried to pop in a &lt;abbr&gt;DVD&lt;/abbr&gt;.&lt;/p&gt; &lt;blockquote&gt; &lt;p&gt;Herself: The &lt;abbr&gt;TV&lt;/abbr&gt; doesn’t work.&lt;/p&gt; &lt;p&gt;Myself: I unplugged it.&lt;/p&gt; &lt;p&gt;Her: When?&lt;/p&gt; &lt;p&gt;Me: About six months ago.&lt;/p&gt; &lt;p&gt;Her: Why would you do that?&lt;/p&gt; &lt;p&gt;Me: To prove we never use it.&lt;/p&gt; &lt;p&gt;Her: I’m trying to use it right now.&lt;/p&gt; &lt;p&gt;Me: What are you hoping to accomplish?&lt;/p&gt; &lt;p&gt;Her: I need to calm the boys down.&lt;/p&gt; &lt;p&gt;Me: And this need has not arisen in the past six months?&lt;/p&gt; &lt;p&gt;Her: We usually read books.&lt;/p&gt; &lt;p&gt;Me: Why can’t we do that now?&lt;/p&gt; &lt;p&gt;Her: …&lt;/p&gt; &lt;p&gt;Me: Can we get rid of the television now?&lt;/p&gt; &lt;p&gt;Her: No, we might need it.&lt;/p&gt; &lt;p&gt;Me: OK, but I’m not plugging it back in.&lt;/p&gt; &lt;p&gt;Her: I hate you.&lt;/p&gt; &lt;/blockquote&gt; &lt;p&gt;About five and a half months after that, which is to say about two weeks ago, I had &lt;a href="http://diveintomark.org/archives/2007/10/17/buying-art-online"&gt;bought some new art&lt;/a&gt; and set about rearranging the walls to make everything fit. “Aha, an opportunity presents itself!” I thought to myself. You see, the (unplugged) television had always blocked a critical piece of real estate in our bedroom, above the dresser, in direct line of sight while lying in bed. The next morning, shortly after she had left the house to go to work, I disassembled the whole contraption, television and &lt;abbr&gt;DVD&lt;/abbr&gt; player and all. I cleaned up an impressive amount of Assorted Random Crap that had accumulated around, behind, and beneath the television, I said goodbye to the final pile of physical discs in our house, and I hung one of my wife’s favorite pieces on the newly reclaimed wall in its place. When she came home, I gave her the grand tour of our newly rearranged walls, of course working up to the bedroom as the finale.&lt;/p&gt; &lt;blockquote&gt; &lt;p&gt;Herself: Yes! You finally got rid of that stupid television!&lt;/p&gt; &lt;p&gt;Myself: You know I unplugged it a year ago.&lt;/p&gt; &lt;p&gt;Her: Really? Why would you do that?&lt;/p&gt; &lt;p&gt;Me: It’s not important.&lt;/p&gt; &lt;/blockquote&gt;
		</content>
		<author>
			<name>
				Mark
			</name>
		</author>
		<source gr:stream-id="feed/http://diveintomark.org/feed">
			<id>
				tag:google.com,2005:reader/feed/http://diveintomark.org/feed
			</id>
			<title type="html">
				dive into mark
			</title>
			<link rel="alternate" href="http://diveintomark.org/" type="text/html" />
		</source>
	</entry>
	<entry gr:is-read-state-locked="true" gr:crawl-timestamp-msec="1264808613697">
		<id gr:original-id="tag:diveintomark.org,2010-01-29:/archives/20100129204220">
			tag:google.com,2005:reader/item/17762c078ae51699
		</id>
		<category term="user/16823450566733491518/state/com.google/tracking-item-link-used" scheme="http://www.google.com/reader/" label="tracking-item-link-used" /><category term="user/16823450566733491518/state/com.google/read" scheme="http://www.google.com/reader/" label="read" /><category term="unfiled" scheme="http://diveintomark.org" /><category term="apple" scheme="http://diveintomark.org" /><category term="freedom0" scheme="http://diveintomark.org" />
		<title type="html">
			Tinkerer’s Sunset
		</title>
		<published>
			2010-01-29T20:42:20Z
		</published>
		<updated>
			2010-05-12T18:24:54Z
		</updated>
		<link rel="alternate" href="http://diveintomark.org/archives/2010/01/29/tinkerers-sunset" type="text/html" />
		<content xml:base="http://diveintomark.org/archives/2010/01/29/tinkerers-sunset" xml:lang="en" type="html">
			&lt;p&gt;&lt;small&gt;[Translations: &lt;a href="http://osamak.wordpress.com/2010/04/29/tinkerers-sunset/"&gt;Arabic&lt;/a&gt;, ...]&lt;/small&gt;&lt;/p&gt; &lt;p&gt;When &lt;a href="http://nanocr.eu/"&gt;DVD Jon&lt;/a&gt; was arrested after breaking the &lt;a href="http://en.wikipedia.org/wiki/Content_Scramble_System"&gt;CSS encryption algorithm&lt;/a&gt;, he was charged with “unauthorized computer trespassing.” That led his lawyers to ask the obvious question, “On whose computer did he trespass?” The prosecutor’s answer: “&lt;a href="http://craphound.com/msftdrm.txt"&gt;his own&lt;/a&gt;.”&lt;/p&gt; &lt;p&gt;If that doesn’t make your heart skip a beat, you can stop reading now.&lt;/p&gt; &lt;p&gt;When I was growing up, “trespassing” was something you could only do to &lt;em&gt;other&lt;/em&gt; people’s computers. But let’s set that aside and come back to it.&lt;/p&gt; &lt;p&gt;My father was a college professor for much of his adult life. One year, he took a sabbatical to write a book. He had saved up enough money to buy a computer and a newfangled thing called a word processing program. And he wrote, and he edited, and he wrote some more. It was so obviously better than working on a typewriter that he never questioned that it was money well spent.&lt;/p&gt; &lt;p&gt;As it happens, this computer came with the BASIC programming language pre-installed. You didn’t even need to boot a disk operating system. You could turn on the computer and press &lt;kbd&gt;Ctrl-Reset&lt;/kbd&gt; and you’d get a prompt. And at this prompt, you could type in &lt;em&gt;an entire program&lt;/em&gt;, and then type &lt;kbd&gt;RUN&lt;/kbd&gt;, and it would motherfucking run.&lt;/p&gt; &lt;p&gt;I was 10. That was 27 years ago, but I still remember what it felt like when I realized that you — that &lt;em&gt;I&lt;/em&gt; — could get this computer to do &lt;em&gt;anything&lt;/em&gt; by typing the right words in the right order and telling it to &lt;kbd&gt;RUN&lt;/kbd&gt; and it would motherfucking run.&lt;/p&gt; &lt;p&gt;That computer was an Apple ][e.&lt;/p&gt; &lt;p&gt;By age 12, I was writing BASIC programs so complex that the computer was running out of memory to hold them. By age 13, I was writing programs in Pascal. By age 14, I was writing programs in assembly language. By age 17, I was competing in the Programming event in the National Science Olympiad (and winning). By age 22, I was employed as a computer programmer.&lt;/p&gt; &lt;p&gt;Today I am a programmer, a technical writer, and a hacker in the &lt;a href="http://www.paulgraham.com/hp.html"&gt;Hackers and Painters&lt;/a&gt; sense of the word. But you don’t become a hacker by programming; you become a hacker by &lt;em&gt;tinkering&lt;/em&gt;. It’s the tinkering that provides that sense of wonder. You have to jump out of the system, tear down the safety gates, peel away the layers of abstraction that the computer provides for the vast majority of people who don’t want to know how it all works. It’s about &lt;a href="http://diveintomark.org/archives/2006/08/22/c600g"&gt;using the Copy ][+ sector editor&lt;/a&gt; to learn how the disk operating system boots, then modifying it so the computer makes a sound every time it reads a sector from the disk. Or displaying a graphical splash screen on startup before it lists the disk catalog and takes you to that BASIC prompt. Or copying a myriad of wondrous commands from the &lt;a href="http://www.lazilong.com/apple_II/bbros/"&gt;Beagle Bros. Peeks &amp;amp; Pokes Chart&lt;/a&gt; and trying to figure out what the fuck I had just done. Just for the hell of it. Because it was fun. Because it scared my parents. Because I absolutely had to know how it all worked.&lt;/p&gt; &lt;p&gt;Later, there was an Apple IIgs. And later still, a Mac IIci. MacsBug. ResEdit. Norton Disk Editor. Stop me if any of this sounds familiar.&lt;/p&gt; &lt;p&gt;Apple made the machines that made me who I am. I became who I am by tinkering.&lt;/p&gt; &lt;p&gt;This post’s title is stolen from &lt;a href="http://al3x.net/2010/01/28/ipad.html"&gt;Alex Payne’s “On the iPad,”&lt;/a&gt; which I shall now quote at great length.&lt;/p&gt; &lt;blockquote&gt; &lt;p&gt;The iPad is an attractive, thoughtfully designed, deeply cynical thing. It is a digital consumption machine. As &lt;a href="http://www.tbray.org/ongoing/When/201x/2010/01/27/iPad"&gt;Tim Bray&lt;/a&gt; and &lt;a href="http://createdigitalmusic.com/2010/01/27/how-a-great-product-can-be-bad-news-apple-ipad-and-the-closed-mac/"&gt;Peter Kirn&lt;/a&gt; have pointed out, it’s a device that does little to enable creativity...&lt;/p&gt; &lt;p&gt;The tragedy of the iPad is that it truly seems to offer a better model of computing for many people — perhaps the majority of people. Gone are the confusing concepts and metaphors of the last thirty years of computing. Gone is the ability to endlessly tweak and twiddle towards no particular gain. The iPad is simple, straightforward, maintenance-free...&lt;/p&gt; &lt;p&gt;The thing that bothers me most about the iPad is this: if I had an iPad rather than a real computer as a kid, I’d never be a programmer today. I’d never have had the ability to run whatever stupid, potentially harmful, hugely educational programs I could download or write. I wouldn’t have been able to fire up ResEdit and edit out the Mac startup sound so I could tinker on the computer at all hours without waking my parents.&lt;/p&gt; &lt;/blockquote&gt; &lt;p&gt;Now, I am aware that you will be able to develop your own programs for the iPad, the same way you can develop for the iPhone today. Anyone can develop! All you need is a Mac, XCode, an iPhone “simulator,” and &lt;a href="http://developer.apple.com/iphone/program/"&gt;$99 for an auto-expiring developer certificate&lt;/a&gt;. The “developer certificate” is really a &lt;a href="http://en.wikipedia.org/wiki/Public-key_cryptography"&gt;cryptographic key&lt;/a&gt; that (temporarily) allows you (slightly) elevated access to... your own computer. And that’s fine — or at least workable — for the developers of today, because they already know that they’re developers. But the developers of tomorrow don’t know it yet. And without the &lt;a href="http://www.freedom-to-tinker.com/about"&gt;freedom to tinker&lt;/a&gt;, some of them never will.&lt;/p&gt; &lt;p&gt;(As a side note, &lt;a href="http://diveintomark.org/archives/2009/11/21/living-in-a-browser"&gt;I was wrong&lt;/a&gt; and &lt;a href="http://diveintomark.org/archives/2009/11/21/living-in-a-browser#comment-13567"&gt;Fredrik was right&lt;/a&gt;, and Chrome OS devices &lt;a href="http://dev.chromium.org/chromium-os/chromiumos-design-docs/firmware-boot-and-recovery#Support_developers_l33t_users_"&gt;will have a switch for developers to run their own local code&lt;/a&gt;. I don’t know the specifics of what it will look like, whether it will be a hardware button or switch or whatever. But it will be there, an officially supported mode for the developers of today and, more importantly, the developers of tomorrow.)&lt;/p&gt; &lt;p&gt;And I know, I know, I know you can “jailbreak” your iPhone, (re)gain root access, and run anything that can motherfucking run. And I have no doubt that someone will figure out how to “jailbreak” the iPad, too. But I don’t want to live in a world where &lt;a href="http://diveintomark.org/archives/2007/10/04/if-wishes-were-iphones"&gt;you have to break into your own computer&lt;/a&gt; before you can start tinkering. And I certainly don’t want to live in a world where tinkering with your own computer is illegal. (DVD Jon was acquitted, by the way. &lt;a href="http://w2.eff.org/effector/HTML/effect16.07.html#VI"&gt;The prosecutor appealed&lt;/a&gt;, and he was acquitted again. But who needs the law when you have public key cryptography on your side?)&lt;/p&gt; &lt;p&gt;Once upon a time, Apple made the machines that made me who I am. I became who I am by tinkering. Now it seems they’re doing everything in their power to stop &lt;em&gt;my&lt;/em&gt; kids from &lt;a href="http://stevenf.com/beagle/legacy.html"&gt;finding that sense of wonder&lt;/a&gt;. Apple has declared war on the tinkerers of the world. With every software update, the previous generation of “jailbreaks” stop working, and people have to find new ways to break into their own computers. There won’t ever be a MacsBug for the iPad. There won’t be a ResEdit, or a Copy ][+ sector editor, or an iPad Peeks &amp;amp; Pokes Chart. And that’s a real loss. Maybe not to you, but to somebody who doesn’t even know it yet.&lt;/p&gt;
		</content>
		<author>
			<name>
				Mark
			</name>
		</author>
		<source gr:stream-id="feed/http://diveintomark.org/feed">
			<id>
				tag:google.com,2005:reader/feed/http://diveintomark.org/feed
			</id>
			<title type="html">
				dive into mark
			</title>
			<link rel="alternate" href="http://diveintomark.org/" type="text/html" />
		</source>
	</entry>
	<entry gr:is-read-state-locked="true" gr:crawl-timestamp-msec="1258827981785">
		<id gr:original-id="tag:diveintomark.org,2009-11-21:/archives/20091121163616">
			tag:google.com,2005:reader/item/98ab172c3987f3d2
		</id>
		<category term="user/16823450566733491518/state/com.google/read" scheme="http://www.google.com/reader/" label="read" /><category term="unfiled" scheme="http://diveintomark.org" /><category term="chromeos" scheme="http://diveintomark.org" /><category term="google" scheme="http://diveintomark.org" />
		<title type="html">
			Living in a browser
		</title>
		<published>
			2009-11-21T16:36:16Z
		</published>
		<updated>
			2009-11-21T20:19:38Z
		</updated>
		<link rel="alternate" href="http://diveintomark.org/archives/2009/11/21/living-in-a-browser" type="text/html" />
		<content xml:base="http://diveintomark.org/archives/2009/11/21/living-in-a-browser" xml:lang="en" type="html">
			&lt;p&gt;(Googler hat off)&lt;/p&gt; &lt;p&gt;I just spent an hour in Starbucks. (My kid is down the street at a Chinese class.) In the past hour, I’ve checked my email, read news, caught up on the HTML5 mailing lists and IRC chatter, paid two bills, balanced my checkbook, and written this post. Without leaving my browser.&lt;/p&gt; &lt;p&gt;So yeah, &lt;a href="http://googleblog.blogspot.com/2009/07/introducing-google-chrome-os.html"&gt;Google Chrome OS&lt;/a&gt; is gonna be a hit.&lt;/p&gt; &lt;p&gt;&lt;del&gt;Bummer about the whole “only runs apps &lt;a title="If you don&amp;#39;t own the master (key), the master owns you" href="http://www.google.com/search?&amp;amp;ie=UTF-8&amp;amp;q=%22if+you+don&amp;#39;t+own+the+master%22+lyrics"&gt;signed by a private key&lt;/a&gt; that Google won’t be sharing with anyone” thing. I’m not thrilled about the prospect of working for a DRM company. Google was in the DRM business once before; it ended with &lt;a href="http://googlewatch.eweek.com/content/google_video/google_admits_to_fixes_video_refund_gaffe.html"&gt;giving everyone their money back, twice&lt;/a&gt;. And does anyone honestly believe the first Chrome OS machine won’t be jailbroken within a week?&lt;/del&gt; Update: I’m getting conflicting reports about whether retail (non-developer) Chrome OS hardware will include a way to run unverified software. I’m locking this discussion thread until I can confirm this important detail.&lt;/p&gt; &lt;p&gt;On the other hand, computer maintenance sucks gargantuan donkey balls, and normal people don’t care about root. If you accost a random person on the street and ask them if they need root on their operating system to install another browser, and they’ll have three questions for you: 1. What’s root? 2. What’s an operating system? 3. &lt;a href="http://googlesystem.blogspot.com/2009/06/browser-is-search-engine.html"&gt;What’s a browser&lt;/a&gt;?&lt;/p&gt; &lt;p&gt;Still… if I had root on a Linux netbook, the first thing I’d do is install Chromium and then spend 99% of my time in the browser. So I have to think that Chrome OS is a step in the right direction.&lt;/p&gt; &lt;p&gt;This is an open thread, but I won’t answer any questions on behalf of Google.&lt;/p&gt;
		</content>
		<author>
			<name>
				Mark
			</name>
		</author>
		<source gr:stream-id="feed/http://diveintomark.org/feed">
			<id>
				tag:google.com,2005:reader/feed/http://diveintomark.org/feed
			</id>
			<title type="html">
				dive into mark
			</title>
			<link rel="alternate" href="http://diveintomark.org/" type="text/html" />
		</source>
	</entry>
	<entry gr:is-read-state-locked="true" gr:crawl-timestamp-msec="1258573033375">
		<id gr:original-id="tag:diveintomark.org,2009-11-18:/archives/20091118172714">
			tag:google.com,2005:reader/item/1042a106a17ae1d9
		</id>
		<category term="user/16823450566733491518/state/com.google/read" scheme="http://www.google.com/reader/" label="read" /><category term="unfiled" scheme="http://diveintomark.org" /><category term="work" scheme="http://diveintomark.org" />
		<title type="html">
			Expense reports
		</title>
		<published>
			2009-11-18T17:27:14Z
		</published>
		<updated>
			2009-11-18T17:28:07Z
		</updated>
		<link rel="alternate" href="http://diveintomark.org/archives/2009/11/18/expense-reports" type="text/html" />
		<content xml:base="http://diveintomark.org/archives/2009/11/18/expense-reports" xml:lang="en" type="html">
			&lt;p&gt;Me: I’ve told you all that I know.&lt;/p&gt; &lt;p&gt;Expense Reporting System: Yes, I’m sure you have. How many receipts do you see there?&lt;/p&gt; &lt;p&gt;Me: I see four receipts.&lt;/p&gt; &lt;p&gt;ERS: No, there are five. Are you quite sure?&lt;/p&gt; &lt;p&gt;Me: There are four receipts.&lt;/p&gt; &lt;p&gt;ERS: I don’t understand how you can be so mistaken.&lt;/p&gt; &lt;p&gt;Me: THERE. ARE. FOUR. RECEIPTS!&lt;/p&gt; &lt;p&gt;…and so on…&lt;/p&gt;
		</content>
		<author>
			<name>
				Mark
			</name>
		</author>
		<source gr:stream-id="feed/http://diveintomark.org/feed">
			<id>
				tag:google.com,2005:reader/feed/http://diveintomark.org/feed
			</id>
			<title type="html">
				dive into mark
			</title>
			<link rel="alternate" href="http://diveintomark.org/" type="text/html" />
		</source>
	</entry>
	<entry gr:is-read-state-locked="true" gr:crawl-timestamp-msec="1257205799192">
		<id gr:original-id="tag:diveintomark.org,2009-11-02:/archives/20091102231833">
			tag:google.com,2005:reader/item/c84692a583c7699f
		</id>
		<category term="user/16823450566733491518/state/com.google/read" scheme="http://www.google.com/reader/" label="read" /><category term="unfiled" scheme="http://diveintomark.org" /><category term="history" scheme="http://diveintomark.org" /><category term="html" scheme="http://diveintomark.org" /><category term="mu" scheme="http://diveintomark.org" />
		<title type="html">
			Why do we have an IMG element?
		</title>
		<published>
			2009-11-02T23:18:33Z
		</published>
		<updated>
			2009-11-03T21:38:59Z
		</updated>
		<link rel="alternate" href="http://diveintomark.org/archives/2009/11/02/why-do-we-have-an-img-element" type="text/html" />
		<content xml:base="http://diveintomark.org/archives/2009/11/02/why-do-we-have-an-img-element" xml:lang="en" type="html">
			&lt;p&gt;On February 25, 1993, &lt;a href="http://1997.webhistory.org/www.lists/www-talk.1993q1/0182.html"&gt;&lt;cite&gt;Marc Andreessen&lt;/cite&gt; wrote&lt;/a&gt;:&lt;/p&gt; &lt;blockquote&gt; &lt;p&gt;I’d like to propose a new, optional HTML tag:&lt;/p&gt; &lt;p&gt;IMG&lt;/p&gt; &lt;p&gt;Required argument is &lt;code&gt;SRC="url"&lt;/code&gt;. &lt;/p&gt; &lt;p&gt;This names a bitmap or pixmap file for the browser to attempt to pull over the network and interpret as an image, to be embedded in the text at the point of the tag’s occurrence.&lt;/p&gt; &lt;p&gt;An example is: &lt;p&gt;&lt;code&gt;&amp;lt;IMG SRC=&amp;quot;file://foobar.com/foo/bar/blargh.xbm&amp;quot;&amp;gt;&lt;/code&gt;&lt;/p&gt; &lt;p&gt;(There is no closing tag; this is just a standalone tag.)&lt;/p&gt; &lt;p&gt;This tag can be embedded in an anchor like anything else; when that happens, it becomes an icon that’s sensitive to activation just like a regular text anchor.&lt;/p&gt; &lt;p&gt;Browsers should be afforded flexibility as to which image formats they support. Xbm and Xpm are good ones to support, for example. If a browser cannot interpret a given format, it can do whatever it wants instead (X Mosaic will pop up a default bitmap as a placeholder).&lt;/p&gt; &lt;p&gt;This is required functionality for X Mosaic; we have this working, and we’ll at least be using it internally. I’m certainly open to suggestions as to how this should be handled within HTML; if you have a better idea than what I’m presenting now, please let me know. I know this is hazy wrt image format, but I don’t see an alternative than to just say “let the browser do what it can” and wait for the perfect solution to come along (MIME, someday, maybe).&lt;/p&gt; &lt;/p&gt;&lt;/blockquote&gt; &lt;p&gt;&lt;a href="http://en.wikipedia.org/wiki/X_BitMap"&gt;Xbm&lt;/a&gt; and &lt;a href="http://en.wikipedia.org/wiki/X_PixMap"&gt;Xpm&lt;/a&gt; were popular graphics formats on Unix systems.&lt;/p&gt; &lt;p&gt;“Mosaic” was one of the earliest web browsers. (“X Mosaic” was the version that ran on Unix systems.) When he wrote this message in early 1993, &lt;a href="http://en.wikipedia.org/wiki/Marc_Andreessen"&gt;Marc Andreessen&lt;/a&gt; had not yet founded the company that made him famous, &lt;a href="http://en.wikipedia.org/wiki/Mosaic_Communications_Corporation"&gt;Mosaic Communications Corporation&lt;/a&gt;, nor had he started work on that company’s flagship product, “Mosaic Netscape.” (You may know them better by their later names, “Netscape Corporation” and “Netscape Navigator.”)&lt;/p&gt; &lt;p&gt;“MIME, someday, maybe” is a reference to &lt;a href="http://en.wikipedia.org/wiki/Content_negotiation"&gt;content negotiation&lt;/a&gt;, a feature of HTTP where a client (like a web browser) tells the server (like a web server) what types of resources it supports (like &lt;code&gt;image/jpeg&lt;/code&gt;) so the server can return something in the client’s preferred format. &lt;a href="http://www.w3.org/Protocols/HTTP/AsImplemented.html"&gt;The Original HTTP as defined in 1991&lt;/a&gt; (the only version that was implemented in February 1993) did not have a way for clients to tell servers what kind of images they supported, thus the design dilemma that Marc faced.&lt;/p&gt; &lt;p&gt;A few hours later, &lt;a href="http://1997.webhistory.org/www.lists/www-talk.1993q1/0183.html"&gt;&lt;cite&gt;Tony Johnson&lt;/cite&gt; replied&lt;/a&gt;:&lt;/p&gt; &lt;blockquote&gt; &lt;p&gt;I have something very similar in Midas 2.0 (in use here at SLAC, and due for public release any week now), except that all the names are different, and it has an extra argument &lt;code&gt;NAME="name"&lt;/code&gt;. It has almost exactly the same functionality as your proposed &lt;code&gt;IMG&lt;/code&gt; tag. e.g.&lt;/p&gt; &lt;p&gt;&lt;code&gt;&amp;lt;ICON name=&amp;quot;NoEntry&amp;quot; href=&amp;quot;http://note/foo/bar/NoEntry.xbm&amp;quot;&amp;gt;&lt;/code&gt;&lt;/p&gt; &lt;p&gt;The idea of the name parameter was to allow the browser to have a set of “built in” images. If the name matches a “built in” image it would use that instead of having to go out and fetch the image. The name could also act as a hint for “line mode” browsers as to what kind of a symbol to put in place of the image.&lt;/p&gt; &lt;p&gt;I don’t much care about the parameter or tag names, but it would be sensible if we used the same things. I don’t much care for abbreviations, ie why not &lt;code&gt;IMAGE=&lt;/code&gt; and &lt;code&gt;SOURCE=&lt;/code&gt;. I somewhat prefer &lt;code&gt;ICON&lt;/code&gt; since it imlies that the &lt;code&gt;IMAGE&lt;/code&gt; should be smallish, but maybe &lt;code&gt;ICON&lt;/code&gt; is an overloaded word?&lt;/p&gt; &lt;/blockquote&gt; &lt;p&gt;&lt;a href="http://en.wikipedia.org/wiki/MidasWWW"&gt;Midas&lt;/a&gt; was another early web browser, a contemporary of X Mosaic. It was cross-platform; it ran on both Unix and VMS. “SLAC” refers to the &lt;a href="http://en.wikipedia.org/wiki/Stanford_Linear_Accelerator"&gt;Stanford Linear Accelerator Center&lt;/a&gt; (now the SLAC National Accelerator Laboratory). SLAC hosted the first web server in the United States (in fact &lt;a href="http://www.slac.stanford.edu/history/earlyweb/history.shtml"&gt;the first web server outside Europe&lt;/a&gt;). When &lt;a href="http://www.slac.stanford.edu/history/earlyweb/wizards.shtml#Tony%20Johnson"&gt;Tony&lt;/a&gt; wrote this message, SLAC was an old-timer on the WWW, having hosted &lt;a href="http://www.slac.stanford.edu/history/earlyweb/firstpages.shtml"&gt;five pages&lt;/a&gt; on their web server for a whopping 441 days.&lt;/p&gt; &lt;p&gt;Tony continued:&lt;/p&gt; &lt;blockquote&gt; &lt;p&gt;While we are on the subject of new tags, I have another, somewhat similar tag, which I would like to support in Midas 2.0. In principle it is:&lt;/p&gt; &lt;p&gt;&lt;code&gt;&amp;lt;INCLUDE HREF=&amp;quot;...&amp;quot;&amp;gt;&lt;/code&gt;&lt;/p&gt; &lt;p&gt;The intention here would be that the second document is to be included into the first document at the place where the tag occured. In principle the referenced document could be anything, but the main purpose was to allow images (in this case arbitrary sized) to be embedded into documents. Again the intention would be that when HTTP2 comes along the format of the included document would be up for separate negotiation.&lt;/p&gt; &lt;/blockquote&gt; &lt;p&gt;“HTTP2” is a reference to &lt;a href="http://www.w3.org/Protocols/HTTP/HTTP2.html"&gt;Basic HTTP as defined in 1992&lt;/a&gt;. At this point in early 1993, it was still largely unimplemented. The draft known as “HTTP2” evolved and was eventually standardized as “HTTP 1.0” (albeit &lt;a href="http://www.w3.org/Protocols/HTTP/1.0/spec.html"&gt;not for another three years&lt;/a&gt;). HTTP 1.0 did include &lt;a href="http://www.w3.org/Protocols/HTTP/HTRQ_Headers.html#z3"&gt;request headers for content negotiation&lt;/a&gt;, a.k.a. “MIME, someday, maybe.”&lt;/p&gt; &lt;p&gt;Tony continued:&lt;/p&gt; &lt;blockquote&gt; &lt;p&gt;An alternative I was considering was:&lt;/p&gt; &lt;p&gt;&lt;code&gt;&amp;lt;A HREF=&amp;quot;...&amp;quot; INCLUDE&amp;gt;See photo&amp;lt;/A&amp;gt;&lt;/code&gt;&lt;/p&gt; &lt;p&gt;I don’t much like adding more functionality to the &lt;code&gt;&amp;lt;A&amp;gt;&lt;/code&gt; tag, but the idea here is to maintain compatibility with browsers that can not honour the &lt;code&gt;INCLUDE&lt;/code&gt; parameter. The intention is that browsers which do understand &lt;code&gt;INCLUDE&lt;/code&gt;, replace the anchor text (in this case “See photo”) with the included document (picture), while older or dumber browsers ignore the &lt;code&gt;INCLUDE&lt;/code&gt; tag completely.&lt;/p&gt; &lt;/blockquote&gt; &lt;p&gt;This proposal was never implemented, although the idea of text-if-an-image-is-missing is &lt;a href="http://diveintoaccessibility.org/day_23_providing_text_equivalents_for_images.html"&gt;an important accessibility technique&lt;/a&gt; which was missing from Marc’s initial &lt;code&gt;&amp;lt;IMG&amp;gt;&lt;/code&gt; proposal. Many years later, this feature was bolted on as the &lt;a href="http://www.w3.org/TR/html4/struct/objects.html#h-13.8"&gt;&lt;code&gt;&amp;lt;img alt&amp;gt;&lt;/code&gt; attribute&lt;/a&gt;, which Netscape promptly broke by &lt;a href="http://www.cs.tut.fi/~jkorpela/html/alt.html#tooltip"&gt;erroneously treating it as a tooltip&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;A few hours after that, &lt;a href="http://1997.webhistory.org/www.lists/www-talk.1993q1/0186.html"&gt;&lt;cite&gt;Tim Berners-Lee&lt;/cite&gt; responded&lt;/a&gt;:&lt;/p&gt; &lt;blockquote&gt; &lt;p&gt;I had imagined that figues would be reprented as&lt;/p&gt; &lt;p&gt;&lt;code&gt;&amp;lt;a name=fig1 href=&amp;quot;fghjkdfghj&amp;quot; REL=&amp;quot;EMBED, PRESENT&amp;quot;&amp;gt;Figure &amp;lt;/a&amp;gt;&lt;/code&gt;&lt;/p&gt; &lt;p&gt;where the relation ship values mean&lt;/p&gt; &lt;pre&gt;EMBED Embed this here when presenting it PRESENT Present this whenever the source document is presented&lt;/pre&gt; &lt;p&gt;Note that you can have various combinations of these, and if the browser doesn’t support either one, it doesn’t break.&lt;/p&gt; &lt;p&gt;[I] see that using this as a method for selectable icons means nesting anchors. Hmmm. But I hadn’t wanted a special tag.&lt;/p&gt; &lt;/blockquote&gt; &lt;p&gt;This proposal was never implemented, but the &lt;code&gt;rel&lt;/code&gt; attribute is &lt;a href="http://diveintohtml5.org/semantics.html#link"&gt;still around&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;&lt;a href="http://1997.webhistory.org/www.lists/www-talk.1993q1/0188.html"&gt;&lt;cite&gt;Jim Davis&lt;/cite&gt; added&lt;/a&gt;:&lt;/p&gt; &lt;blockquote&gt; &lt;p&gt;It would be nice if there was a way to specify the content type, e.g.&lt;/p&gt; &lt;p&gt;&lt;code&gt;&amp;lt;IMG HREF=&amp;quot;http://nsa.gov/pub/sounds/gorby.au&amp;quot; CONTENT-TYPE=audio/basic&amp;gt;&lt;/code&gt;&lt;/p&gt; &lt;p&gt;But I am completely willing to live with the requirement that I specify the content type by file extension.&lt;/p&gt; &lt;/blockquote&gt; &lt;p&gt;This proposal was never implemented, but Netscape did later add arbitrary embedding of media objects with the &lt;code&gt;&amp;lt;embed&amp;gt;&lt;/code&gt; element.&lt;/p&gt; &lt;p&gt;&lt;a href="http://1997.webhistory.org/www.lists/www-talk.1993q1/0192.html"&gt;&lt;cite&gt;Jay C. Weber&lt;/cite&gt; asked&lt;/a&gt;:&lt;/p&gt; &lt;blockquote&gt; &lt;p&gt;While images are at the top of my list of desired medium types in a WWW browser, I don’t think we should add idiosyncratic hooks for media one at a time. Whatever happened to the enthusiasm for using the MIME typing mechanism? &lt;/p&gt;&lt;/blockquote&gt; &lt;p&gt;&lt;a href="http://1997.webhistory.org/www.lists/www-talk.1993q1/0194.html"&gt;&lt;cite&gt;Marc Andreessen&lt;/cite&gt; replied&lt;/a&gt;:&lt;/p&gt; &lt;blockquote&gt; &lt;p&gt;This isn’t a substitute for the upcoming use of MIME as a standard document mechanism; this provides a necessary and simple implementation of functionality that’s needed independently from MIME.&lt;/p&gt; &lt;/blockquote&gt; &lt;p&gt;&lt;a href="http://1997.webhistory.org/www.lists/www-talk.1993q1/0198.html"&gt;&lt;cite&gt;Jay C. Weber&lt;/cite&gt; responded&lt;/a&gt;:&lt;/p&gt; &lt;blockquote&gt; &lt;p&gt;Let’s temporarily forget about MIME, if it clouds the issue. My objection was to the discussion of “how are we going to support embedded images” rather than “how are we going to support embedded objections in various media”.&lt;/p&gt; &lt;p&gt;Otherwise, next week someone is going to suggest ‘lets put in a new tag &lt;code&gt;&amp;lt;AUD SRC=&amp;quot;file://foobar.com/foo/bar/blargh.snd&amp;quot;&amp;gt;&lt;/code&gt;‘ for audio.&lt;/p&gt; &lt;p&gt;There shouldn’t be much cost in going with something that generalizes.&lt;/p&gt; &lt;/blockquote&gt; &lt;p&gt;With the benefit of hindsight, it appears that Jay’s concerns were well-founded. It took a little more than a week, but HTML5 did finally add new &lt;a href="http://www.whatwg.org/specs/web-apps/current-work/multipage/video.html#video"&gt;&lt;code&gt;&amp;lt;video&amp;gt;&lt;/code&gt;&lt;/a&gt; and &lt;a href="http://www.whatwg.org/specs/web-apps/current-work/multipage/video.html#audio"&gt;&lt;code&gt;&amp;lt;audio&amp;gt;&lt;/code&gt;&lt;/a&gt; elements.&lt;/p&gt; &lt;p&gt;Responding to Jay’s original message, &lt;a href="http://1997.webhistory.org/www.lists/www-talk.1993q1/0204.html"&gt;&lt;cite&gt;Dave Raggett&lt;/cite&gt; said&lt;/a&gt;:&lt;/p&gt; &lt;blockquote&gt; &lt;p&gt;True indeed! I want to consider a whole range of possible image/line art types, along with the possibility of format negotiation. Tim’s note on supporting clickable areas within images is also important.&lt;/p&gt; &lt;/blockquote&gt; &lt;p&gt;Later in 1993, &lt;a href="http://www.w3.org/People/Raggett/"&gt;Dave Raggett&lt;/a&gt; proposed &lt;a href="http://www.w3.org/MarkUp/HTMLPlus/htmlplus_1.html"&gt;HTML+&lt;/a&gt; as an evolution of the HTML standard. The proposal was never implemented, and it was superceded by &lt;a href="http://www.w3.org/MarkUp/html-spec/html-spec_toc.html"&gt;HTML 2.0&lt;/a&gt;. HTML 2.0 was a “retro-spec,” which means it formalized features already in common use. “&lt;a href="http://www.w3.org/MarkUp/html-spec/html-spec_1.html#SEC1.1"&gt;This specification brings together, clarifies, and formalizes a set of features&lt;/a&gt; that roughly corresponds to the capabilities of HTML in common use prior to June 1994.”&lt;/p&gt; &lt;p&gt;Dave later wrote &lt;a href="http://www.w3.org/MarkUp/html3/CoverPage.html"&gt;HTML 3.0&lt;/a&gt;, based on his earlier HTML+ draft. HTML 3.0 was also never implemented (outside of the W3C’s own reference implementation, &lt;a href="http://www.w3.org/Arena/"&gt;Arena&lt;/a&gt;), and it was superceded by &lt;a href="http://www.w3.org/MarkUp/Wilbur/"&gt;HTML 3.2&lt;/a&gt;. HTML 3.2 was also a “retro-spec” — “&lt;a href="http://www.w3.org/TR/REC-html32.html#intro"&gt;HTML 3.2 adds widely deployed features&lt;/a&gt; such as tables, applets and text flow around images, while providing full backwards compatibility with the existing standard HTML 2.0.”&lt;/p&gt; &lt;p&gt;Dave later co-authored &lt;a href="http://www.w3.org/TR/html4"&gt;HTML 4.0&lt;/a&gt; and developed &lt;a href="http://tidy.sourceforge.net/"&gt;HTML Tidy&lt;/a&gt;, and went on to help with XHTML, XForms, MathML, and other modern W3C specifications.&lt;/p&gt; &lt;p&gt;Getting back to 1993, &lt;a href="http://1997.webhistory.org/www.lists/www-talk.1993q1/0209.html"&gt;Marc replied to Dave&lt;/a&gt;:&lt;/p&gt; &lt;blockquote&gt; &lt;p&gt;Actually, maybe we should think about a general-purpose procedural graphics language within which we can embed arbitrary hyperlinks attached to icons, images, or text, or anything. Has anyone else seen Intermedia’s capabilities wrt this?&lt;/p&gt; &lt;/blockquote&gt; &lt;p&gt;&lt;a href="http://en.wikipedia.org/wiki/Intermedia_(hypertext)"&gt;Intermedia&lt;/a&gt; was a hypertext project from Brown University. It was developed from 1985 to 1991 and ran on &lt;a href="http://en.wikipedia.org/wiki/A/UX"&gt;A/UX&lt;/a&gt;, a Unix-like operating system for early Macintosh computers.&lt;/p&gt; &lt;p&gt;The idea of a “general-purpose procedural graphics language” did eventually catch on. Modern browsers support both &lt;a href="http://www.w3.org/Graphics/SVG/"&gt;SVG&lt;/a&gt; (declarative markup with embedded scripting) and &lt;a href="http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#the-canvas-element"&gt;&lt;code&gt;&amp;lt;canvas&amp;gt;&lt;/code&gt;&lt;/a&gt; (procedural direct-mode graphics API), although the latter &lt;a href="http://ln.hixie.ch/?start=1089635050&amp;amp;count=1"&gt;started as a proprietary extension&lt;/a&gt; before being “retro-specced” by the &lt;a href="http://www.whatwg.org/"&gt;WHATWG&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;&lt;a href="http://1997.webhistory.org/www.lists/www-talk.1993q1/0217.html"&gt;&lt;cite&gt;Bill Janssen&lt;/cite&gt; replied&lt;/a&gt;:&lt;/p&gt; &lt;blockquote&gt; &lt;p&gt;Other systems to look at which have this (fairly valuable) notion are Andrew and Slate. Andrew is built with _insets_, each of which has some interesting type, such as text, bitmap, drawing, animation, message, spreadsheet, etc. The notion of arbitrary recursive embedding is present, so that an inset of any kind can be embedded in any other kind which supports embedding. For example, an inset can be embedded at any point in the text of the text widget, or in any rectangular area in the drawing widget, or in any cell of the spreadsheet.&lt;/p&gt; &lt;/blockquote&gt; &lt;p&gt;“Andrew” is a reference to the &lt;a href="http://www-2.cs.cmu.edu/~AUIS/"&gt;Andrew User Interface System&lt;/a&gt; (although at that time it was simply known as the &lt;a href="http://en.wikipedia.org/wiki/Andrew_Project"&gt;Andrew Project&lt;/a&gt;).&lt;/p&gt; &lt;p&gt;Meanwhile, &lt;a href="http://1997.webhistory.org/www.lists/www-talk.1993q1/0215.html"&gt;&lt;cite&gt;Thomas Fine&lt;/cite&gt; had a different idea&lt;/a&gt;:&lt;/p&gt; &lt;blockquote&gt; &lt;p&gt;Here’s my opinion. The best way to do images in WWW is by using MIME. I’m sure postscript is already a supported subtype in MIME, and it deals very nicely with mixing text and graphics.&lt;/p&gt; &lt;p&gt;But it isn’t clickable, you say? Yes your right. I suspect there is already an answer to this in display postscript. Even if there isn’t the addition to standard postscript is trivial. Define an anchor command which specifies the URL and uses the current path as a closed region for the button. Since postscript deals so well with paths, this makes arbitrary button shapes trivial.&lt;/p&gt; &lt;/blockquote&gt; &lt;p&gt;&lt;a href="http://en.wikipedia.org/wiki/Display_PostScript"&gt;Display Postscript&lt;/a&gt; was an on-screen rendering technology co-developed by Adobe and NeXT.&lt;/p&gt; &lt;p&gt;This proposal was never implemented, but the idea that the best way to fix HTML is to replace it with something else altogether &lt;a href="http://dbaron.org/log/20090707-ex-html"&gt;still pops up from time to time&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;&lt;a href="http://1997.webhistory.org/www.lists/www-talk.1993q1/0221.html"&gt;&lt;cite&gt;Tim Berners-Lee&lt;/cite&gt;, March 2, 1993&lt;/a&gt;:&lt;/p&gt; &lt;blockquote&gt; &lt;p&gt;HTTP2 allows a document to contain any type which the user has said he can handle, not just registered MIME types. So one can experiment. Yes I think there is a case for postscript with hypertext. I don’t know whether display postcript has enough. I know Adobe are trying to establish their own postscript-based “PDF” which will have links, and be readable by their proprietory brand of viewers.&lt;/p&gt; &lt;p&gt;I thought that a generic overlaying language for anchors (Hytime based?) would allow the hypertext and the graphics/video standards to evolve separately, which would help both.&lt;/p&gt; &lt;p&gt;Let the &lt;code&gt;IMG&lt;/code&gt; tag be &lt;code&gt;INCLUDE&lt;/code&gt; and let it refer to an arbitrary document type. Or &lt;code&gt;EMBED&lt;/code&gt; if &lt;code&gt;INCLUDE&lt;/code&gt; sounds like a cpp include which people will expect to provide SGML source code to be parsed inline — not what was intended.&lt;/p&gt; &lt;/blockquote&gt; &lt;p&gt;&lt;a href="http://www.hytime.org/"&gt;HyTime&lt;/a&gt; was an early, SGML-based hypertext document system. It loomed large in many early discussions of HTML, and later XML.&lt;/p&gt; &lt;p&gt;Tim’s proposal for an &lt;code&gt;&amp;lt;INCLUDE&amp;gt;&lt;/code&gt; tag was never implemented, although you can see echoes of it in &lt;code&gt;&amp;lt;object&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;embed&amp;gt;&lt;/code&gt;, and the &lt;code&gt;&amp;lt;iframe&amp;gt;&lt;/code&gt; element.&lt;/p&gt; &lt;p&gt;Finally, on March 12, 1993, &lt;a href="http://1997.webhistory.org/www.lists/www-talk.1993q1/0257.html"&gt;Marc Andreessen revisited the thread&lt;/a&gt;:&lt;/p&gt; &lt;blockquote&gt; &lt;p&gt;Back to the inlined image thread again — I’m getting close to releasing Mosaic v0.10, which will support inlined GIF and XBM images/bitmaps, as mentioned previously. …&lt;/p&gt; &lt;p&gt;We’re not prepared to support &lt;code&gt;INCLUDE&lt;/code&gt;/&lt;code&gt;EMBED&lt;/code&gt; at this point. … So we’re probably going to go with &lt;code&gt;&amp;lt;IMG SRC=&amp;quot;url&amp;quot;&amp;gt;&lt;/code&gt; (not &lt;code&gt;ICON&lt;/code&gt;, since not all inlined images can be meaningfully called icons). For the time being, inlined images won’t be explicitly content-type’d; down the road, we plan to support that (along with the general adaptation of MIME). Actually, the image reading routines we’re currently using figure out the image format on the fly, so the filename extension won’t even be significant.&lt;/p&gt; &lt;/blockquote&gt; &lt;p&gt;I don’t really know why I wrote this. It wasn’t what I set out to write. That happens. But I am extraordinarily fascinated with all aspects of this almost-17-year-old conversation. Consider:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;HTTP still exists. HTTP successfully evolved from 0.9 into 1.0 and later 1.1. &lt;a href="http://www.ietf.org/dyn/wg/charter/httpbis-charter.html"&gt;And still it evolves&lt;/a&gt;.&lt;/li&gt; &lt;li&gt;HTML still exists. That rudimentary data format — it didn’t even support inline images! — successfully evolved into 2.0, 3.2, 4.0. &lt;a href="http://www.whatwg.org/"&gt;And still it, too, evolves&lt;/a&gt;. HTML is an unbroken line. A twisted, knotted, snarled line, to be sure. There were plenty of “dead branches” in the evolutionary tree, places where standards-minded people got ahead of themselves (and ahead of authors and implementors). But still. Here we are, in 2009, and &lt;a href="http://www.w3.org/People/Berners-Lee/FAQ.html#Examples"&gt;web pages from 1990&lt;/a&gt; still render in modern browsers. I just loaded one up on my Android phone, and I didn’t even get prompted to “please wait while importing legacy format…”&lt;/li&gt; &lt;li&gt;HTML has always been a conversation between browser makers, authors, standards wonks, and other people who just showed up and liked to talk about angle brackets. Most of the successful versions of HTML have been “retro-specs,” catching up to the world while simultaneously trying to nudge it in the right direction. Anyone who tells you that HTML should be kept “pure” (presumably by ignoring browser makers, or ignoring authors, or both) is simply misinformed. HTML has never been pure, and all attempts to purify it have been spectacular failures, matched only by the attempts to replace it.&lt;/li&gt; &lt;li&gt;None of the browsers from 1993 still exist in any recognizable form. Netscape Navigator was &lt;a href="http://en.wikipedia.org/wiki/History_of_Mozilla_Application_Suite#Open_sourcing_of_Communicator"&gt;abandoned in 1998&lt;/a&gt; and &lt;a href="http://en.wikipedia.org/wiki/History_of_Mozilla_Application_Suite#Rewriting_from_scratch"&gt;rewritten from scratch&lt;/a&gt; to create the Mozilla Suite, which was then &lt;a href="http://en.wikipedia.org/wiki/History_of_Mozilla_Firefox"&gt;forked to create Firefox&lt;/a&gt;. Internet Explorer had its humble “beginnings” in “Microsoft Plus! for Windows 95,” where it was bundled with some desktop themes and a pinball game. (But of course that browser &lt;a href="http://en.wikipedia.org/wiki/Spyglass_Mosaic"&gt;can be traced back further too&lt;/a&gt;.)&lt;/li&gt; &lt;li&gt;Some of the operating systems from 1993 still exist, but none of them are relevant to the modern web. Most people today who “experience” the web do so on a PC running Windows 2000 or later, a Mac running Mac OS X, a PC running some flavor of Linux, or a handheld device like an iPhone. In 1993, Windows was at version 3.1 (and competing with OS/2), Macs were running System 7, and Linux was distributed via Usenet. (Want to have some fun? Find a graybeard and whisper “Trumpet Winsock” or “MacPPP.”)&lt;/li&gt; &lt;li&gt;Some of the same &lt;em&gt;people&lt;/em&gt; are still around and still involved in what we now simply call “web standards.” That’s after almost 20 years. And some were involved in predecessors of HTML, going back into the 1980s and before.&lt;/li&gt; &lt;li&gt;Speaking of predecessors… With the eventual popularity of HTML and the web, it is easy to forget the contemporary formats and systems that informed its design. Andrew? Intermedia? HyTime? And HyTime was not some rinky-dink academic research project; &lt;a href="http://xml.coverpages.org/hytime.html"&gt;it was an ISO standard&lt;/a&gt;. It was approved for military use. It was Big Business. And you can read about it yourself… &lt;a href="http://www.sgmlsource.com/history/hthist.htm"&gt;on this HTML page, in your web browser&lt;/a&gt;.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;But none of this answers the original question: why do we have an &lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt; element? Why not an &lt;code&gt;&amp;lt;icon&amp;gt;&lt;/code&gt; element? Or an &lt;code&gt;&amp;lt;include&amp;gt;&lt;/code&gt; element? Why not a hyperlink with an &lt;code&gt;include&lt;/code&gt; attribute, or some combination of &lt;code&gt;rel&lt;/code&gt; values? Why an &lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt; element? Quite simply, because Marc Andreessen shipped one, and shipping code wins.&lt;/p&gt; &lt;p&gt;That’s not to say that &lt;em&gt;all&lt;/em&gt; shipping code wins; after all, Andrew and Intermedia and HyTime shipped code too. Code is necessary but not sufficient for success. And I &lt;em&gt;certainly&lt;/em&gt; don’t mean to say that shipping code before a standard will produce the best solution. Marc’s &lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt; element didn’t mandate a common graphics format; it didn’t define how text flowed around it; it didn’t support text alternatives or fallback content for older browsers. And 16, almost 17 years later, &lt;a href="http://tools.ietf.org/html/draft-abarth-mime-sniff"&gt;we’re still struggling with content sniffing&lt;/a&gt;, and it’s still &lt;a href="http://code.google.com/p/doctype/wiki/ArticleContentSniffing"&gt;a source of crazy security vulnerabilities&lt;/a&gt;. And you can trace that all the way back, 17 years, through the &lt;a href="http://en.wikipedia.org/wiki/Browser_wars"&gt;Great Browser Wars&lt;/a&gt;, all the way back to February 25, 1993, when Marc Andreessen offhandedly remarked, “MIME, someday, maybe,” and then shipped his code anyway.&lt;/p&gt; &lt;p&gt;The ones that win are the ones that ship.&lt;/p&gt;
		</content>
		<author>
			<name>
				Mark
			</name>
		</author>
		<source gr:stream-id="feed/http://diveintomark.org/feed">
			<id>
				tag:google.com,2005:reader/feed/http://diveintomark.org/feed
			</id>
			<title type="html">
				dive into mark
			</title>
			<link rel="alternate" href="http://diveintomark.org/" type="text/html" />
		</source>
	</entry>
	<entry gr:is-read-state-locked="true" gr:crawl-timestamp-msec="1256008617040">
		<id gr:original-id="tag:diveintomark.org,2009-10-20:/archives/20091020024932">
			tag:google.com,2005:reader/item/922ad2b8c2649298
		</id>
		<category term="user/16823450566733491518/state/com.google/read" scheme="http://www.google.com/reader/" label="read" /><category term="unfiled" scheme="http://diveintomark.org" /><category term="freedom0" scheme="http://diveintomark.org" /><category term="publishing" scheme="http://diveintomark.org" />
		<title type="html">
			Thank you for giving me the opportunity to explain this to you
		</title>
		<published>
			2009-10-20T02:49:32Z
		</published>
		<updated>
			2009-10-20T19:57:09Z
		</updated>
		<link rel="alternate" href="http://diveintomark.org/archives/2009/10/19/the-point" type="text/html" />
		<content xml:base="http://diveintomark.org/archives/2009/10/19/the-point" xml:lang="en" type="html">
			&lt;p&gt;Recently, someone did the unthinkable: they published their own version of &lt;a href="http://diveintopython.org/"&gt;Dive Into Python&lt;/a&gt; and got it listed on Amazon.com. This apparently caused a small firestorm within Apress, the exact details of which I am not privy to, but which (I am told) became a somewhat larger firestorm after the Apress executives realized they had no legal recourse, and asked my opinion on the matter. You see, the book is published under the GNU Free Documentation License, which explicitly gives anyone and everyone &lt;a title="see Sections 2 and 3" href="http://www.gnu.org/copyleft/fdl.html"&gt;the right to publish it themselves&lt;/a&gt;. (I was about to write “gives third parties the right,” until I realized that there are no third parties because there are no second parties. That’s kind of the point.)&lt;/p&gt; &lt;p&gt;This didn’t use to matter, because publishing on paper used to require a serious up-front investment in, well, paper. “Freedom of the press” was reserved for those with an actual press, and distribution costs were decidedly non-trivial. Publishing a book commercially just wasn’t practical for anyone but, well, a book publisher. That’s no longer the case. Copies can be purchased online, printed on demand, and drop-shipped to the customer — up-front investment be damned. And that’s for &lt;em&gt;printed&lt;/em&gt; books; e-books are even easier.&lt;/p&gt; &lt;p&gt;Software had this problem first, by virtue of its non-corporeality. How many people are selling Free Software on eBay? We deride these sellers as “scammers,” but in truth the only time they run afoul of the law is when they attempt to rebrand your software without acknowledgement, or when they fail to abide by some other intentionally inside-out clause of the license that you chose in the first place (e.g. selling GPL’d binaries without offering source code).&lt;/p&gt; &lt;p&gt;Still, there’s a qualitative difference between letting people download your own work from your own site, and watching other people try to profit from it. But it is precisely this difference that strikes at the heart of the Free Software/Free Culture ethos. Part of choosing a Free license for your own work is accepting that people may use it in ways you disapprove of. There are no “field of use” restrictions, and there are no “commercial use” restrictions either. In fact, those are two of the fundamental tenets of the “Free” in Free Software. If “others profiting from my work” is something you seek to avoid, then Free Software is not for you. Opt for a Creative Commons “Non-Commercial” license, or a “personal use only” freeware license, or a traditional End User License Agreement. Free Software doesn’t have “end users.” That’s kind of the point.&lt;/p&gt; &lt;p&gt;The aforementioned Apress executive told me that he did not understand why I would be willing to work with a publisher but then be happy about their competition. This is what I told him:&lt;/p&gt; &lt;blockquote&gt; &lt;p&gt;I enjoy working with publishers because it makes me a better writer. But I don’t write for money; I write for love (or passion, or whatever you want to call it). I choose open content licenses because this is the way I want the world to work, and the only way to change the world is to change yourself first.&lt;/p&gt; &lt;p&gt;I don’t know where that leaves you as a business. But you’ve made a good amount of money on the original “Dive Into Python,” despite the fact that it’s been available for free online for 8 years. A German translation of &lt;a href="http://diveintopython3.org/"&gt;Dive Into Python 3&lt;/a&gt; is being published this quarter by Springer/Germany [a division of Apress&amp;#39; parent company] almost simultaneously with the English edition — much sooner-to-market than it would have been under a closed development process. (And &lt;a href="http://gpiancastelli.altervista.org/dip3-it/"&gt;an Italian translation&lt;/a&gt; was just released yesterday. You should snap that one up too before someone else does!) So maybe the problems you perceive are really opportunities in disguise.&lt;/p&gt; &lt;/blockquote&gt; &lt;p&gt;So I am grateful for this anonymous soul who woke up one day and said to herself, “You know what I should do today? I should try to sell copies of that Free book that Pilgrim wrote.” Grateful, because it afforded me the opportunity to remind myself why I chose a Free license in the first place. My Zen teacher once told me that, when people try to do you harm, you should thank them for giving you the opportunity to forgive them. In this case it’s even simpler, because there’s nothing to forgive, just explain. She’s redistributing the work that I explicitly made redistributable. She’s kind of the point.&lt;/p&gt;
		</content>
		<author>
			<name>
				Mark
			</name>
		</author>
		<source gr:stream-id="feed/http://diveintomark.org/feed">
			<id>
				tag:google.com,2005:reader/feed/http://diveintomark.org/feed
			</id>
			<title type="html">
				dive into mark
			</title>
			<link rel="alternate" href="http://diveintomark.org/" type="text/html" />
		</source>
	</entry>
	<entry gr:is-read-state-locked="true" gr:crawl-timestamp-msec="1254774762280">
		<id gr:original-id="tag:diveintomark.org,2009-10-05:/archives/20091005195615">
			tag:google.com,2005:reader/item/493911c6b9719fa7
		</id>
		<category term="user/16823450566733491518/state/com.google/read" scheme="http://www.google.com/reader/" label="read" /><category term="unfiled" scheme="http://diveintomark.org" /><category term="html5" scheme="http://diveintomark.org" /><category term="microsoft" scheme="http://diveintomark.org" /><category term="rant" scheme="http://diveintomark.org" />
		<title type="html">
			Translation From MS-Speak to English of Selected Portions of Tony Ross’ “Distributed Extensibility Submission”
		</title>
		<published>
			2009-10-05T19:56:15Z
		</published>
		<updated>
			2009-10-05T19:56:15Z
		</updated>
		<link rel="alternate" href="http://diveintomark.org/archives/2009/10/05/distributed-unicorns-and-ponies" type="text/html" />
		<content xml:base="http://diveintomark.org/archives/2009/10/05/distributed-unicorns-and-ponies" xml:lang="en" type="html">
			&lt;p&gt;[Source &lt;a href="http://lists.w3.org/Archives/Public/public-html/2009Sep/att-1216/MicrosoftDistributedExtensibilitySubmission.htm"&gt;Distributed Extensibility Submission from Microsoft - 30 September 2009&lt;/a&gt;]&lt;/p&gt; &lt;blockquote&gt; &lt;p&gt;It is a common practice for authors, tool vendors, and library authors to want to extend languages to represent additional information that can’t be adequately described by the standard grammar. … Here are a few examples that apply to HTML:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;A JavaScript library processes custom tags in a browser and turns them into custom controls dynamically on the page.&lt;/li&gt; &lt;/ul&gt; &lt;/blockquote&gt; &lt;p&gt;We would very much like our proprietary &lt;a href="http://msdn.microsoft.com/en-us/library/ms531076(VS.85).aspx"&gt;Custom Tags&lt;/a&gt; to validate.&lt;/p&gt; &lt;blockquote&gt; &lt;ul&gt; &lt;li&gt;A browser wants to allow custom behaviors to be defined in one module and attached automatically to custom elements.&lt;/li&gt; &lt;/ul&gt; &lt;/blockquote&gt; &lt;p&gt;We would very much like our proprietary &lt;a href="http://msdn.microsoft.com/en-us/library/ms532146(VS.85).aspx"&gt;HTML Components&lt;/a&gt; to validate.&lt;/p&gt; &lt;blockquote&gt; &lt;ul&gt; &lt;li&gt;An author includes processing instructions in the document that will be processed by a server before delivering the document to a user agent.&lt;/li&gt; &lt;/ul&gt; &lt;/blockquote&gt; &lt;p&gt;We would very much like SharePoint’s proprietary &lt;a href="http://geekswithblogs.net/stas/archive/2005/06/14/43571.aspx"&gt;InfoPath processing instructions&lt;/a&gt; to validate.&lt;/p&gt; &lt;blockquote&gt; &lt;ul&gt; &lt;li&gt;A HTML document editor adds information about tool settings so that a subsequent editing session can continue with the same settings.&lt;/li&gt; &lt;/ul&gt; &lt;/blockquote&gt; &lt;p&gt;We would very much like Word’s “export as HTML” output — which is so proprietary that it has spawned &lt;a href="http://www.google.com/search?q=clean+up+word+html"&gt;an entire cottage industry&lt;/a&gt; dedicated to “cleaning” it — to validate.&lt;/p&gt; &lt;blockquote&gt; &lt;p&gt;In many cases, the language customizations are used for small niche applications and don’t require the burden of centralized standardization. Instead these extensions are defined in a distributed fashion among groups of interested developers or authors.&lt;/p&gt; &lt;/blockquote&gt; &lt;p&gt;We like making up our own shit.&lt;/p&gt; &lt;blockquote&gt; &lt;p&gt;A Distributed Extensibility model for standard HTML is desirable because it means that user agents from different vendors that adhere to the standard can be assured of correctly processing mark-up that contains extensions without destroying the integrity of the document.&lt;/p&gt; &lt;/blockquote&gt; &lt;p&gt;Other people keep fucking up our shit.&lt;/p&gt; &lt;blockquote&gt; &lt;p&gt;The proposal as stated closely matches behavior that Internet Explorer has had for a number of releases, reducing compatibility concerns.&lt;/p&gt; &lt;/blockquote&gt; &lt;p&gt;I am &lt;a href="http://lists.w3.org/Archives/Public/public-html/2009Sep/1219.html"&gt;high&lt;/a&gt; &lt;a href="http://lists.w3.org/Archives/Public/public-html/2009Oct/0001.html"&gt;as&lt;/a&gt; &lt;a href="http://lists.w3.org/Archives/Public/public-html/2009Oct/0040.html"&gt;a&lt;/a&gt; &lt;a href="http://lists.w3.org/Archives/Public/public-html/2009Oct/0076.html"&gt;kite&lt;/a&gt;.&lt;/p&gt; &lt;blockquote&gt; &lt;p&gt;Supporting distributed extensibility means providing a standard repeatable mechanism for creating these extensions without the need for centralized agreement.&lt;/p&gt; &lt;/blockquote&gt; &lt;p&gt;We’re going to keep making up our own shit, whether it validates or not.&lt;/p&gt; &lt;p style="text-align:right;font-style:oblique"&gt;&lt;small&gt;(with apologies to &lt;a href="http://daringfireball.net/2007/02/macrovision_translation"&gt;John Gruber&lt;/a&gt;,&lt;br&gt;who did it first and did it best)&lt;/small&gt;&lt;/p&gt; &lt;hr&gt; &lt;p&gt;&lt;i&gt;Postscript:&lt;/i&gt; I am not “against” extensibility, or distributed extensibility, or decentralized extensibility, or whatever we’re calling namespaces this week. I just think it’s funny that some people read this proposal and immediately jumped to &lt;strong&gt;The Glorious And Infinitely Extensible Semantic Web With Unicorns And Ponies&lt;/strong&gt;, when it’s really just an attempt to get the HTML Working Group to bless a collection of Microsoft-proprietary technologies that they’ve jammed into Internet Explorer over the years.&lt;/p&gt;
		</content>
		<author>
			<name>
				Mark
			</name>
		</author>
		<source gr:stream-id="feed/http://diveintomark.org/feed">
			<id>
				tag:google.com,2005:reader/feed/http://diveintomark.org/feed
			</id>
			<title type="html">
				dive into mark
			</title>
			<link rel="alternate" href="http://diveintomark.org/" type="text/html" />
		</source>
	</entry>
	<entry gr:is-read-state-locked="true" gr:crawl-timestamp-msec="1254368060540">
		<id gr:original-id="tag:diveintomark.org,2009-10-01:/archives/20091001024951">
			tag:google.com,2005:reader/item/27f180f461096984
		</id>
		<category term="user/16823450566733491518/state/com.google/read" scheme="http://www.google.com/reader/" label="read" /><category term="unfiled" scheme="http://diveintomark.org" /><category term="contentsniffing" scheme="http://diveintomark.org" /><category term="html5" scheme="http://diveintomark.org" /><category term="markup" scheme="http://diveintomark.org" /><category term="python" scheme="http://diveintomark.org" /><category term="python3" scheme="http://diveintomark.org" />
		<title type="html">
			Recently
		</title>
		<published>
			2009-10-01T02:49:51Z
		</published>
		<updated>
			2009-10-01T02:49:51Z
		</updated>
		<link rel="alternate" href="http://diveintomark.org/archives/2009/09/30/recently" type="text/html" />
		<content xml:base="http://diveintomark.org/archives/2009/09/30/recently" xml:lang="en" type="html">
			&lt;p&gt;Most of my recent writing has happened elsewhere.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href="http://diveintopython3.org/"&gt;Dive Into Python 3&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="http://diveintohtml5.org/"&gt;Dive Into HTML5&lt;/a&gt; (in progress)&lt;/li&gt; &lt;li&gt;Various articles about HTML5 on the WHATWG blog, including &lt;ul&gt; &lt;li&gt;&lt;a href="http://blog.whatwg.org/this-summer-in-html-5-episode-33"&gt;This Summer in HTML5 (episode 33)&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="http://blog.whatwg.org/this-week-in-html-5-episode-34"&gt;This Week in HTML5 (episode 34)&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="http://blog.whatwg.org/response-to-notes-on-html-5"&gt;Response to “Notes on HTML5″&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="http://blog.whatwg.org/this-week-in-html5-episode-35"&gt;This Week in HTML5 (episode 35)&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="http://blog.whatwg.org/this-week-in-html5-episode-36"&gt;This Week in HTML5 (episode 36)&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="http://blog.whatwg.org/content-sniffing-still-sucks"&gt;Sniffing RSS 1.0 feeds served as text/html&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;That last article came about during the creation of &lt;a href="http://code.google.com/p/mimesniff/"&gt;mimesniff&lt;/a&gt;, my open source Python 3 library that implements the HTML5 Content-Type detection and character encoding detection algorithms.&lt;/p&gt; &lt;p&gt;If none of that is your cup of tea, here is a picture of my dog Beauregard, enjoying the beautiful North Carolina summer weather.&lt;/p&gt; &lt;p&gt;&lt;img src="http://wearehugh.com/public/2009/09/beauregard-on-deck.jpg" alt="Beauregard on deck" width="500" height="375"&gt;&lt;/p&gt;
		</content>
		<author>
			<name>
				Mark
			</name>
		</author>
		<source gr:stream-id="feed/http://diveintomark.org/feed">
			<id>
				tag:google.com,2005:reader/feed/http://diveintomark.org/feed
			</id>
			<title type="html">
				dive into mark
			</title>
			<link rel="alternate" href="http://diveintomark.org/" type="text/html" />
		</source>
	</entry>
	<entry gr:is-read-state-locked="true" gr:crawl-timestamp-msec="1249400028107">
		<id gr:original-id="tag:diveintomark.org,2009-08-04:/archives/20090804145747">
			tag:google.com,2005:reader/item/4776f7d25e4e8449
		</id>
		<category term="user/16823450566733491518/state/com.google/read" scheme="http://www.google.com/reader/" label="read" /><category term="unfiled" scheme="http://diveintomark.org" /><category term="accessibility" scheme="http://diveintomark.org" /><category term="html5" scheme="http://diveintomark.org" /><category term="w3c" scheme="http://diveintomark.org" />
		<title type="html">
			Open for your input
		</title>
		<published>
			2009-08-04T14:57:47Z
		</published>
		<updated>
			2009-08-04T14:57:47Z
		</updated>
		<link rel="alternate" href="http://diveintomark.org/archives/2009/08/04/open-for-your-input" type="text/html" />
		<content xml:base="http://diveintomark.org/archives/2009/08/04/open-for-your-input" xml:lang="en" type="html">
			&lt;p&gt;&lt;a href="http://lists.w3.org/Archives/Public/www-archive/2009Jun/0026.html"&gt;On June 3, 2009, Janina Sajka, Chair of the Protocols and Formats Working Group of the W3C Web Accessibility Initiative (WAI), wrote&lt;/a&gt;: &lt;blockquote&gt; &lt;p&gt;The following consensus was reached by Protocols and Formats Working Group during its teleconference of Wednesday, 3 June 2009 …&lt;/p&gt; &lt;p&gt;We note that summary is often used as a technique for accessibility support where governmental regulations require governmental web sites to be accessible. … [link to &lt;a href="http://www.access-board.gov/sec508/guide/1194.22.htm#(g)"&gt;Guide to the Section 508 Standards for Electronic and Information Technology, Subpart B - Technical Standards, Web-based Intranet and Internet Information and Applications (1194.22), Section (g) "Data Table"&lt;/a&gt;]&lt;/p&gt; &lt;p&gt;If summary is removed [from HTML 5], U.S. Government web sites, might find it more difficult to conform to HTML 5. We further note that Section 508 regulations apply to U.S. state and local governments, and that similar accessibility requirements are emerging in Canada, the U.K., the E.U., Australia, and elsewhere.&lt;/p&gt; &lt;/blockquote&gt; &lt;p&gt;&lt;a href="http://www.access-board.gov/sec508/guide/1194.22.htm#(g)"&gt;Guide to the Section 508 Standards for Electronic and Information Technology, Subpart B – Technical Standards, Web-based Intranet and Internet Information and Applications (1194.22), Section (g) “Data Table”&lt;/a&gt;:&lt;/p&gt; &lt;blockquote&gt; &lt;p&gt;Web developers who are interested in summarizing their tables should consider placing their descriptions either adjacent to their tables or in the body of the table, using such tags as the CAPTION tag.&lt;/p&gt; &lt;/blockquote&gt; &lt;p&gt;&lt;a href="http://lists.w3.org/Archives/Public/www-archive/2009Jun/0027.html"&gt;On June 4, 2009, Ian Hickson, editor of the HTML 5 specification, replied&lt;/a&gt;: &lt;blockquote&gt; &lt;p&gt;As far as I can tell this concern is unfounded; the &amp;lt;caption&amp;gt; attribute is in fact encouraged by the very same government (as quoted above) to be used exactly as HTML5 recommends in a manner consistent with the goals of the summary=”&amp;quot; attribute.&lt;/p&gt; &lt;/blockquote&gt; &lt;p&gt;&lt;a href="http://www.whatwg.org/specs/web-apps/current-work/multipage/tabular-data.html#table-descriptions"&gt;HTML 5, Editor’s Draft as of this writing&lt;/a&gt;:&lt;/p&gt; &lt;blockquote&gt; &lt;p&gt;For tables that consist of more than just a grid of cells with headers in the first row and headers in the first column, and for any table in general where the reader might have difficulty understanding the content, authors should include explanatory information introducing the table. This information is useful for all users, but is especially useful for users who cannot see the table, e.g. users of screen readers.&lt;/p&gt; &lt;p&gt;Such explanatory information should introduce the purpose of the table, outline its basic cell structure, highlight any trends or patterns, and generally teach the user how to use the table.&lt;/p&gt; &lt;p&gt;There are a variety of ways to include this information, such as:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;In prose, surrounding the table&lt;/li&gt; &lt;li&gt;In the table’s caption&lt;/li&gt; &lt;li&gt;In the table’s caption, in a details element&lt;/li&gt; &lt;li&gt;Next to the table, in the same figure&lt;/li&gt; &lt;li&gt;Next to the table, in a figure’s legend&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Authors may also use other techniques, or combinations of the above techniques, as appropriate.&lt;/p&gt; &lt;p&gt;If a table element has a summary attribute, the user agent may report the contents of that attribute to the user.&lt;/p&gt; &lt;/blockquote&gt; &lt;p&gt;&lt;a href="http://lists.w3.org/Archives/Public/public-html/2009Jul/0258.html"&gt;On July 7, 2009, Janina Sajka, Chair of the Protocols and Formats Working Group of the W3C Web Accessibility Initiative (WAI), wrote&lt;/a&gt;:&lt;/p&gt; &lt;blockquote&gt; &lt;p&gt;PF responded on these questions formally. We would appreciate the basic human courtessy of acknowledgment. If you don’t like what we said, please speak to that. But kindly don’t simply ignore us. [link to the &lt;a href="http://lists.w3.org/Archives/Public/www-archive/2009Jun/0026.html"&gt;June 3, 2009 message announcing the consensus of the Protocols and Formats Working Group&lt;/a&gt;]&lt;/p&gt; &lt;/blockquote&gt; &lt;p&gt;&lt;a href="http://lists.w3.org/Archives/Public/public-html/2009Jul/0259.html"&gt;On July 7, 2009, Ian Hickson, editor of the HTML 5 specification, replied&lt;/a&gt;:&lt;/p&gt; &lt;blockquote&gt; &lt;p&gt;That e-mail received a reply some weeks ago: [link to &lt;a href="http://lists.w3.org/Archives/Public/www-archive/2009Jun/0027.html"&gt;Ian Hickson's message of June 4, 2009&lt;/a&gt;]&lt;/p&gt; &lt;p&gt;Is there a formal reply to that e-mail?&lt;/p&gt; &lt;/blockquote&gt; &lt;p&gt;&lt;a href="http://lists.w3.org/Archives/Public/public-html/2009Jul/0260.html"&gt;On July 7, 2009, Janina Sajka, Chair of the Protocols and Formats Working Group of the W3C Web Accessibility Initiative (WAI), replied&lt;/a&gt;:&lt;/p&gt; &lt;blockquote&gt; &lt;p&gt;No, we don’t make formal replies to individuals.&lt;/p&gt; &lt;/blockquote&gt; &lt;p&gt;&lt;a href="http://lists.w3.org/Archives/Public/public-html/2009Aug/0099.html"&gt;On August 2, 2009, John Foliot wrote&lt;/a&gt;:&lt;/p&gt; &lt;blockquote&gt; &lt;p&gt;I maintain that it is not the role of the HTML WG, and the editor in particular, to be offering this guidance, especially when it contradicts the consensus position of the W3C Group chartered to speak on web accessibility issues. Simply put, you are messing in somebody else’s yard, and it is against W3C process to be doing so. If HTML WG feel that they have compelling evidence and data that suggests that the WCAG guidance needs to be reviewed and revised, there is a process for that.&lt;/p&gt; &lt;/blockquote&gt; &lt;p&gt;&lt;a href="http://lists.w3.org/Archives/Public/public-html/2009Aug/0124.html"&gt;On August 3, 2009, Ian Hickson responded to John Foliot&lt;/a&gt;:&lt;/p&gt; &lt;blockquote&gt; &lt;p&gt;I didn’t want to be the one to have to explain this to you, but nobody else is doing so, so here goes: The W3C process doesn’t actually require that working groups agree, or not contradict each other. The WAI’s mission is not binding on other working groups.&lt;/p&gt; &lt;/blockquote&gt; &lt;p&gt;&lt;a href="http://lists.w3.org/Archives/Public/public-html/2009Aug/0132.html"&gt;On August 3, 2009, at approximately 7:51 pm, Roy Fielding wrote&lt;/a&gt;:&lt;/p&gt; &lt;blockquote&gt; &lt;p&gt;I have no opinion on the value of @summary other than noting the likelihood that its support will be required for some FIPS or government statute for accessibility, and therefore deprecating it within HTML5 will just make HTML5 look stupid.&lt;/p&gt; &lt;/blockquote&gt; &lt;p&gt;&lt;a href="http://www.access-board.gov/sec508/guide/1194.22.htm#(g)"&gt;Guide to the Section 508 Standards for Electronic and Information Technology, Subpart B – Technical Standards, Web-based Intranet and Internet Information and Applications (1194.22), Section (g) “Data Table”&lt;/a&gt;:&lt;/p&gt; &lt;blockquote&gt; &lt;p&gt;Web developers who are interested in summarizing their tables should consider placing their descriptions either adjacent to their tables or in the body of the table, using such tags as the CAPTION tag.&lt;/p&gt; &lt;/blockquote&gt; &lt;p&gt;&lt;a href="http://lists.w3.org/Archives/Public/public-html/2009Aug/0136.html"&gt;On August 3, 2009, at approximately 7:59 pm, Roy Fielding wrote&lt;/a&gt;:&lt;/p&gt; &lt;blockquote&gt; &lt;p&gt;[A]uthors are clearly not served by a specification that tells them caption and summary are the same and all such information must be relegated to caption. As an implementor of content management systems used by government agencies in several different countries, I will not conform to any HTML specification that deprecates or fails to define @summary.&lt;/p&gt; &lt;/blockquote&gt; &lt;p&gt;&lt;a href="http://www.access-board.gov/sec508/guide/1194.22.htm#(g)"&gt;Guide to the Section 508 Standards for Electronic and Information Technology, Subpart B – Technical Standards, Web-based Intranet and Internet Information and Applications (1194.22), Section (g) “Data Table”&lt;/a&gt;:&lt;/p&gt; &lt;blockquote&gt; &lt;p&gt;Web developers who are interested in summarizing their tables should consider placing their descriptions either adjacent to their tables or in the body of the table, using such tags as the CAPTION tag.&lt;/p&gt; &lt;/blockquote&gt; &lt;p&gt;&lt;a href="http://www.alistapart.com/articles/tohellwithwcag2/"&gt;On May 23, 2006, Joe Clark wrote&lt;/a&gt;:&lt;/p&gt; &lt;blockquote&gt; &lt;p&gt;The Web Content Accessibility Guidelines Working Group [part of the W3C Web Accessibility Initiative (WAI)] is the worst committee, group, company, or organization I’ve ever worked with. Several of my friends and I were variously ignored; threatened with ejection from the group or actually ejected; and actively harassed.&lt;/p&gt; &lt;/blockquote&gt; &lt;p&gt;&lt;a href="http://www.alistapart.com/comments/tohellwithwcag2/#10"&gt;In response to Joe Clark’s article, John Foliot wrote&lt;/a&gt;:&lt;/p&gt; &lt;blockquote&gt; &lt;p&gt;I can attest to knowing a regular participant to the [Web Content Accessibility Guidelines] WG discussion list who has been shut down and ignored on more than one occasion, and I personally have been dismissed by other working groups within the W3C. … So the behavior and treatment described by Joe is not unknown any time you strongly voice an opinion counter to the internal W3C herd.&lt;/p&gt; &lt;/blockquote&gt; &lt;p&gt;&lt;a href="http://lists.w3.org/Archives/Public/public-html/2009Aug/0080.html"&gt;On August 2, 2009, John Foliot wrote&lt;/a&gt;:&lt;/p&gt; &lt;blockquote&gt; &lt;p&gt;I have submitted an alternative [HTML 5] Draft document for consideration; one which I believe rightly returns the role of author guidance for creating accessible content to the W3C WAI – the group officially chartered by the W3C to speak to these matters. It is a question of respect.&lt;/p&gt; &lt;/blockquote&gt; &lt;p&gt;&lt;a href="http://lists.w3.org/Archives/Public/public-html/2009Aug/0148.html"&gt;On August 4, 2009, Ian Hickson asked&lt;/a&gt;:&lt;/p&gt; &lt;blockquote&gt; &lt;p&gt;Are you saying that for you, it is more important that HTML5 not contradict other W3C specifications, than it be that HTML5 address accessibility problems with the HTML language?&lt;/p&gt; &lt;/blockquote&gt; &lt;p&gt;&lt;a href="http://lists.w3.org/Archives/Public/public-html/2009Aug/0149.html"&gt;On August 4, 2009, John Foliot responded to Ian Hickson&lt;/a&gt;:&lt;/p&gt; &lt;blockquote&gt; &lt;p&gt;You needs to stop contradicting WAI, even if you have proof that WAI might need to update their guidance. …&lt;/p&gt; &lt;p&gt;Contradictory information *harms* the overall outreach aspect of teaching people how to create accessible web content, and I speak from the position of one who actually does that for a living, and have been doing so for close to a decade. THE MESSAGE WE SEND TO THE WORLD’S WEB DEVELOPERS MUST BE CONSISTENT!&lt;/p&gt; &lt;/blockquote&gt; &lt;p&gt;&lt;a href="http://www.access-board.gov/sec508/guide/1194.22.htm#(g)"&gt;Guide to the Section 508 Standards for Electronic and Information Technology, Subpart B – Technical Standards, Web-based Intranet and Internet Information and Applications (1194.22), Section (g) “Data Table”&lt;/a&gt;:&lt;/p&gt; &lt;blockquote&gt; &lt;p&gt;Web developers who are interested in summarizing their tables should consider placing their descriptions either adjacent to their tables or in the body of the table, using such tags as the CAPTION tag.&lt;/p&gt; &lt;/blockquote&gt; &lt;p&gt;&lt;a href="http://lists.w3.org/Archives/Public/public-html/2009Aug/0132.html"&gt;On August 3, 2009, Roy Fielding wrote&lt;/a&gt;:&lt;/p&gt; &lt;blockquote&gt; &lt;p&gt;John [Foliot]’s point is that the W3C has a group specifically tasked to make accessibility recommendations.&lt;/p&gt; &lt;/blockquote&gt; &lt;p&gt;&lt;a href="http://lists.w3.org/Archives/Public/public-html/2009Aug/0134.html"&gt;On August 3, 2009, David Baron responded to Roy Fielding&lt;/a&gt;:&lt;/p&gt; &lt;blockquote&gt; &lt;p&gt;Has that group weighed in in this debate, in response to the evidence presented? Or is it just that an out-of-date (i.e., not updated in response to newer evidence) recommendation of that group is being cited?&lt;/p&gt; &lt;/blockquote&gt; &lt;p&gt;&lt;a href="http://lists.w3.org/Archives/Public/public-html/2009Aug/0135.html"&gt;On August 3, 2009, Roy Fielding responded to David Baron&lt;/a&gt;:&lt;/p&gt; &lt;blockquote&gt; &lt;p&gt;I don’t know — it isn’t a relevant question. The group exists [link to &lt;a href="http://www.w3.org/WAI/"&gt;W3C Web Accessibility Initiative (WAI)&lt;/a&gt;] and seems to be open for your input.&lt;/p&gt; &lt;/blockquote&gt;&lt;/p&gt;&lt;/p&gt;
		</content>
		<author>
			<name>
				Mark
			</name>
		</author>
		<source gr:stream-id="feed/http://diveintomark.org/feed">
			<id>
				tag:google.com,2005:reader/feed/http://diveintomark.org/feed
			</id>
			<title type="html">
				dive into mark
			</title>
			<link rel="alternate" href="http://diveintomark.org/" type="text/html" />
		</source>
	</entry>
	<entry gr:is-read-state-locked="true" gr:crawl-timestamp-msec="1246920263199">
		<id gr:original-id="tag:diveintomark.org,2009-07-06:/archives/20090706192553">
			tag:google.com,2005:reader/item/0198e7c108d00619
		</id>
		<category term="user/16823450566733491518/state/com.google/read" scheme="http://www.google.com/reader/" label="read" /><category term="unfiled" scheme="http://diveintomark.org" /><category term="mu" scheme="http://diveintomark.org" />
		<title type="html">
			This is the house
		</title>
		<published>
			2009-07-06T19:25:53Z
		</published>
		<updated>
			2009-07-06T19:25:53Z
		</updated>
		<link rel="alternate" href="http://diveintomark.org/archives/2009/07/06/this-is-the-house" type="text/html" />
		<content xml:base="http://diveintomark.org/archives/2009/07/06/this-is-the-house" xml:lang="en" type="html">
			&lt;p&gt;This is the house&lt;br&gt; This is the house&lt;br&gt; The house of confusion&lt;br&gt; That Jeffrey built. &lt;p&gt;These are the tags&lt;br&gt; That live in the house&lt;br&gt; The house of confusion&lt;br&gt; That Jeffrey built. &lt;p&gt;These are the slashes&lt;br&gt; That we all ignore&lt;br&gt; That end the tags&lt;br&gt; That live in the house&lt;br&gt; The house of confusion&lt;br&gt; That Jeffrey built. &lt;p&gt;This is the namespace&lt;br&gt; That doesn’t do squat&lt;br&gt; When we parse the slashes&lt;br&gt; That end the tags&lt;br&gt; That live in the house&lt;br&gt; That Jeffrey built. &lt;p&gt;This is the header&lt;br&gt; That nobody sees&lt;br&gt; ’Cause they see the namespace&lt;br&gt; That doesn’t do squat&lt;br&gt; When we parse the slashes&lt;br&gt; That end the tags&lt;br&gt; That live in the house&lt;br&gt; That Jeffrey built. &lt;p&gt;This is the spec&lt;br&gt; That nobody uses&lt;br&gt; ’Cause we use the header&lt;br&gt; That nobody sees&lt;br&gt; ’Cause they see the namespace&lt;br&gt; That doesn’t do squat&lt;br&gt; When we parse the slashes&lt;br&gt; That end the tags&lt;br&gt; That live in the house&lt;br&gt; That Jeffrey built. &lt;p&gt;Say goodbye to the spec&lt;br&gt; That no longer exists&lt;br&gt; And stick with the header&lt;br&gt; That nobody sees&lt;br&gt; And drop the namespace&lt;br&gt; That doesn’t do squat&lt;br&gt; And skip the slashes&lt;br&gt; That end the tags&lt;br&gt; That live in the house&lt;br&gt; That live in the house&lt;br&gt; The house of confusion&lt;br&gt; That Jeffrey built.&lt;/p&gt;&lt;/p&gt;&lt;/p&gt;&lt;/p&gt;&lt;/p&gt;&lt;/p&gt;&lt;/p&gt;
		</content>
		<author>
			<name>
				Mark
			</name>
		</author>
		<source gr:stream-id="feed/http://diveintomark.org/feed">
			<id>
				tag:google.com,2005:reader/feed/http://diveintomark.org/feed
			</id>
			<title type="html">
				dive into mark
			</title>
			<link rel="alternate" href="http://diveintomark.org/" type="text/html" />
		</source>
	</entry>
	<entry gr:is-read-state-locked="true" gr:crawl-timestamp-msec="1240340685250">
		<id gr:original-id="tag:diveintomark.org,2009-04-21:/archives/20090421170644">
			tag:google.com,2005:reader/item/48b9ae656aca3220
		</id>
		<category term="user/16823450566733491518/state/com.google/read" scheme="http://www.google.com/reader/" label="read" /><category term="unfiled" scheme="http://diveintomark.org" /><category term="fonts" scheme="http://diveintomark.org" /><category term="rant" scheme="http://diveintomark.org" /><category term="typography" scheme="http://diveintomark.org" /><category term="webfonts" scheme="http://diveintomark.org" />
		<title type="html">
			Fuck the foundries
		</title>
		<published>
			2009-04-21T17:06:44Z
		</published>
		<updated>
			2009-04-21T17:08:47Z
		</updated>
		<link rel="alternate" href="http://diveintomark.org/archives/2009/04/21/fuck-the-foundries" type="text/html" />
		<content xml:base="http://diveintomark.org/archives/2009/04/21/fuck-the-foundries" xml:lang="en" type="html">
			&lt;p&gt;The more I read about embedded web fonts, the more I crystalize my thinking. Take, for example, this latest “A List Apart” article where &lt;a href="http://alistapart.com/articles/realfontsontheweb"&gt;Jeffrey Zeldman interviews David Berlow&lt;/a&gt;:&lt;/p&gt; &lt;blockquote&gt; &lt;p&gt;Zeldman: Let me put it another way. I want to use your ITC Franklin in a site I’m designing, but I’m not willing to violate my end user licensing agreement. How do we resolve this impasse, from your perspective?&lt;/p&gt; &lt;p&gt;Berlow: The next step is for those who control the font format(s) to define and document a permissions table to be added with all due haste to the OpenType, CoolType, TrueType, and FreeType formats. … &lt;p&gt;Zeldman: How can type designers and web designers work together to persuade the engineers who control the formats to modify the code to include a permissions table?&lt;/p&gt; &lt;p&gt;Berlow: [W]eb designers flat-out refused to part with real type, which has filled the web with type as graphic files, scaring the bejesus out of a lot of engineering people. … How important dynamically rendered type is to design and use on the web must now be clear. In addition, the only other option — that the type industry cede its intellectual property to the public without permission — is not going to happen. With no upgrade penalty to any applications, or change in usage by the public, the permissions table is the only invisible (type-like) solution. &lt;/p&gt;&lt;/p&gt;&lt;/blockquote&gt; &lt;p&gt;I like how he focuses on the publisher’s end of the problem — “gee, all we have to do is define this permissions table, that sounds easy.” What he fails to mention is that &lt;em&gt;every font-consuming application on every platform on every computer on Earth&lt;/em&gt; will need to be “upgraded” to “respect” this permissions table. Because otherwise they’re not really permissions, are they? They’re just useless bits taking valuable chunks out of my metered bandwidth plan. Like the &lt;a href="http://en.wikipedia.org/wiki/Bozo_bit"&gt;bozo bit&lt;/a&gt; without the bozo.&lt;/p&gt; &lt;p&gt;This, then, is my current thinking about embedded web fonts:&lt;/p&gt; &lt;p style="font-size:xx-large"&gt;&lt;b&gt;FUCK THE FOUNDRIES&lt;/b&gt;&lt;/p&gt; &lt;p&gt;Seriously. Fuck them. They still think they’re in the business of shuffling little bits of metal around. You want to use a super-cool ultra-awesome totally-not-one-of-the-&lt;a href="http://dustinbrewer.com/fonts-on-the-web-and-a-list-of-web-safe-fonts/"&gt;11-web-safe-fonts&lt;/a&gt;? Pick an &lt;a href="http://openfontlibrary.fontly.org/"&gt;open source font&lt;/a&gt; and get on with your life.&lt;/p&gt; &lt;p&gt;I know what you’re going to say. I can hear it in my head already. It sounds like the voice of the comic book guy from The Simpsons. You’re going to say, “Typography is by professionals, for professionals. Free fonts are worth less than you pay for them. They don’t have good hinting. They don’t come in different weights. They don’t have anything near complete Unicode coverage. They don’t, they don’t, they don’t…”&lt;/p&gt; &lt;p&gt;And you’re right. You’re absolutely, completely, totally, 100% right. “Your Fonts” are professionally designed, traditionally licensed, aggressively marketed, and bought by professional designers who know a professional typeface when they see it. “Our Fonts” are nothing more than toys, and I’m the guy showing up at the Philadelphia Orchestra auditions with a tin drum and a kazoo. “Ha ha, look at the freetard with his little toy fonts, that he wants to put on his little toy web page, where they can be seen by 2 billion people ha h… wait, what?”&lt;/p&gt; &lt;p&gt;Let me put it another way. Your Fonts are superior to Our Fonts in &lt;em&gt;every conceivable way&lt;/em&gt;, except one:&lt;/p&gt; &lt;p style="font-size:xx-large"&gt;&lt;b&gt;WE CAN’T FUCKING USE THEM&lt;/b&gt;&lt;/p&gt; &lt;p&gt;Soon — and I mean &lt;a href="http://a.deveria.com/caniuse/#feat=fontface"&gt;really fucking soon&lt;/a&gt;, like “this year” soon — there will be enough different browsers in the hands of enough different people that can use &lt;em&gt;any possible font&lt;/em&gt; on &lt;em&gt;any possible web page&lt;/em&gt;. And then a whole lotta people will start noticing fonts again — not just Your People, just also Our People. People who couldn’t tell a serif from a hole in their head, but they’re gonna be looking for new fonts. People who are just savvy enough to be tired of Comic Sans will be looking for a new font to “spruce up” their elementary school newsletter, which, in an effort to Love Our Mother (Earth), they now publish exclusively online.&lt;/p&gt; &lt;p&gt;And maybe, just maybe, they’ll stumble across Jeffrey Zeldman’s excellent interview with highly talented David Berlow and think, “Wow, this guy has over 300 fonts! That’s awesome! Where can I download them?” And boy, won’t they be surprised to learn that those 300 fonts &lt;em&gt;can only be used offline&lt;/em&gt;. Epic fail.&lt;/p&gt; &lt;p&gt;Dynamic web fonts are coming. Actually they’re already here, but most of Our People haven’t noticed yet. But they will, and that’s going to be a huge boon to somebody. I see you’ve decided that it won’t be you. Well, have fun shuffling your little bits of metal around. The rest of us will be over here, using the only fonts we’re allowed to use: Everything But Yours.&lt;/p&gt;
		</content>
		<author>
			<name>
				Mark
			</name>
		</author>
		<source gr:stream-id="feed/http://diveintomark.org/feed">
			<id>
				tag:google.com,2005:reader/feed/http://diveintomark.org/feed
			</id>
			<title type="html">
				dive into mark
			</title>
			<link rel="alternate" href="http://diveintomark.org/" type="text/html" />
		</source>
	</entry>
	<entry gr:is-read-state-locked="true" gr:crawl-timestamp-msec="1239121223404">
		<id gr:original-id="tag:diveintomark.org,2009-04-07:/archives/20090407153255">
			tag:google.com,2005:reader/item/a55e010f94a04252
		</id>
		<category term="user/16823450566733491518/state/com.google/read" scheme="http://www.google.com/reader/" label="read" /><category term="unfiled" scheme="http://diveintomark.org" /><category term="retail" scheme="http://diveintomark.org" />
		<title type="html">
			hhgregg: DOA
		</title>
		<published>
			2009-04-07T15:32:55Z
		</published>
		<updated>
			2009-04-07T15:32:55Z
		</updated>
		<link rel="alternate" href="http://diveintomark.org/archives/2009/04/07/hhgregg-doa" type="text/html" />
		<content xml:base="http://diveintomark.org/archives/2009/04/07/hhgregg-doa" xml:lang="en" type="html">
			&lt;div style="width:240px"&gt; &lt;img src="http://wearehugh.com/public/2009/04/2735814739_4d6e1d08c8_m.jpg" alt="[receiver of unknown origin]" title="" width="240" height="180"&gt; &lt;p&gt;&lt;a href="http://www.flickr.com/photos/29360210@N08/2735814739/"&gt;SR-2020 Mystery Receiver&lt;/a&gt; © &lt;a href="http://www.flickr.com/people/29360210@N08/"&gt;mysteryreceiver&lt;/a&gt; / &lt;a title="used under Creative Commons Attribution 2.0 License" href="http://creativecommons.org/licenses/by/2.0/"&gt;CC&lt;/a&gt;&lt;/p&gt; &lt;/div&gt; &lt;p&gt;Jason Scott: &lt;a href="http://ascii.textfiles.com/archives/1913"&gt;Brick and Morte&lt;/a&gt;.&lt;/p&gt; &lt;blockquote&gt; &lt;p&gt;But honestly, I don’t know how someone says “the best way for me to sell this stuff is to go into a building, deal with the endless hassles in today’s over-licensed and over-regulated world, get everything working, go into debt, open the door and hope like hell I make more than $3000 in the next 30 days.” Like, now, in the present day.&lt;/p&gt; &lt;/blockquote&gt; &lt;p&gt;2009 may not be the best year to complain about over-regulation, but that’s not what I want to talk about.&lt;/p&gt; &lt;p&gt;Two things happened recently at the local strip mall (&lt;a href="http://maps.google.com/maps?hl=en&amp;amp;ie=UTF8&amp;amp;q=beaver+creek+commons+apex+nc&amp;amp;fb=1&amp;amp;split=1&amp;amp;gl=us&amp;amp;cid=4639396675081315681&amp;amp;li=lmd&amp;amp;z=14&amp;amp;iwloc=A"&gt;Beaver Creek Commons&lt;/a&gt;): &lt;a href="http://money.cnn.com/2009/01/16/news/companies/circuit_city"&gt;Circuit City closed&lt;/a&gt; and hhgregg built a brand new building and opened in it. My father and I like to lightly chatter about business stuff, and Circuit City has been going downhill for a while now. Every single time the topic of Circuit City’s imminent demise comes up in conversation, one of us will interject “NO ONE WILL MISS YOU!” before letting the other finish their sentence.&lt;/p&gt; &lt;p&gt;Still, having never been to an hhgregg, my wife and the boys and I sauntered in after a rare occasion of eating out. As it happens, we need a new very-low-end stereo receiver. Not a whole integrated system, mind you; just something that can sit between our &lt;a href="http://www.slimdevices.com/"&gt;SqueezeBox&lt;/a&gt; and the two speakers in our dining room so we can listen to music while eating dinner. This is not a difficult concept.&lt;/p&gt; &lt;p&gt;hhgregg does not sell receivers. Whole integrated systems, yes. Not parts.&lt;/p&gt; &lt;p&gt;But they &lt;em&gt;do&lt;/em&gt; sell $10 cables… “on sale” for $100. (But they’re &lt;a href="http://diveintomark.org/premium"&gt;premium&lt;/a&gt;!) And $200 DVD players that play… DVDs (not even AVIs). And washing machines — I swear to God, over half the space in this brand spanking new store-in-a-box was devoted to refrigerators and washing machines — ranging from $1200 to $1700. Payment plans available. I asked a salesperson about the difference between a $1200 washing machine and a $1700 washing machine. He glanced furtively at the information card and mumbled, “More bells and whistles.”&lt;/p&gt; &lt;p&gt;Recession-busting pro tip: buy your $10 cables for $10 at &lt;a href="http://www.monoprice.com/"&gt;Monoprice&lt;/a&gt;, buy your electronics at &lt;a href="http://www.newegg.com/"&gt;NewEgg&lt;/a&gt;, and don’t buy a $1700 washing machine from anyone.&lt;/p&gt;
		</content>
		<author>
			<name>
				Mark
			</name>
		</author>
		<source gr:stream-id="feed/http://diveintomark.org/feed">
			<id>
				tag:google.com,2005:reader/feed/http://diveintomark.org/feed
			</id>
			<title type="html">
				dive into mark
			</title>
			<link rel="alternate" href="http://diveintomark.org/" type="text/html" />
		</source>
	</entry>
	<entry gr:is-read-state-locked="true" gr:crawl-timestamp-msec="1238176092903">
		<id gr:original-id="tag:diveintomark.org,2009-03-27:/archives/20090327172042">
			tag:google.com,2005:reader/item/97564d15b2b26f50
		</id>
		<category term="user/16823450566733491518/state/com.google/read" scheme="http://www.google.com/reader/" label="read" /><category term="unfiled" scheme="http://diveintomark.org" /><category term="diveintopython" scheme="http://diveintomark.org" /><category term="docbook" scheme="http://diveintomark.org" /><category term="html" scheme="http://diveintomark.org" />
		<title type="html">
			Dive into history, 2009 edition
		</title>
		<published>
			2009-03-27T17:20:42Z
		</published>
		<updated>
			2009-03-27T21:56:07Z
		</updated>
		<link rel="alternate" href="http://diveintomark.org/archives/2009/03/27/dive-into-history-2009-edition" type="text/html" />
		<content xml:base="http://diveintomark.org/archives/2009/03/27/dive-into-history-2009-edition" xml:lang="en" type="html">
			&lt;a href="http://diveintomark.org/archives/2002/08/04/dive_into_history"&gt;Again&lt;/a&gt;, this is more for my benefit than for yours. If I don’t write this down, I’ll forget it. &lt;p&gt;&lt;a href="http://diveintopython3.org/"&gt;Dive Into Python 3&lt;/a&gt; was commissioned in January 2009 by Apress, who published the original &lt;a href="http://diveintopython.org/"&gt;Dive Into Python&lt;/a&gt; in 2004. Upon agreeing to contract terms, I registered a ten-year lease on &lt;code&gt;diveintopython3.org&lt;/code&gt; and immediately published a draft table of contents.&lt;/p&gt; &lt;p&gt;The original &lt;abbr title="Dive Into Python"&gt;DiP&lt;/abbr&gt; was written in DocBook &lt;abbr&gt;XML&lt;/abbr&gt;. As I’ve mentioned before, I chose DocBook &lt;abbr&gt;XML&lt;/abbr&gt; because I wanted to learn &lt;abbr&gt;XML&lt;/abbr&gt; and XSL, and DocBook seemed to be &lt;i&gt;Just The Thing&lt;/i&gt; for technical documentation. There was also a bit of self-grandeur involved. I was writing a book &lt;i&gt;For The Ages&lt;/i&gt;, so it was important that it be in a &lt;i&gt;Format Of Forever&lt;/i&gt;. And in the short term, I could transform &lt;i&gt;The Format Of Forever&lt;/i&gt; into useful (but lowly) &lt;i&gt;Output Formats&lt;/i&gt;, so I could do unimportant things like publish it online.&lt;/p&gt; &lt;p&gt;&lt;i&gt;For The Ages&lt;/i&gt; turned out to be about 10 years. &lt;i&gt;The Format Of Forever&lt;/i&gt; &lt;a href="http://www.docbook.org/specs/docbook-5.0-spec-cs-01.html"&gt;is still going strong&lt;/a&gt;, but Python itself changed so quickly that it didn’t matter.&lt;/p&gt; &lt;p&gt;Oh, and there was one other little thing that happened between 2000 and 2009: &lt;a href="http://www.google.com/"&gt;search stopped sucking and took over the web&lt;/a&gt;. Kids today may not remember, but it used to be &lt;em&gt;hard&lt;/em&gt; to find stuff on the web. Once you found it, you wanted to download it so you could read it offline.&lt;/p&gt; &lt;p&gt;Remember being “offline”?&lt;/p&gt; &lt;p&gt;Anyway, I now realize that there were some hidden assumptions behind my design decisions in 2000. Some of those assumptions turned out to be wrong, or at least not-completely-right. Sure, a lot of people downloaded &lt;abbr&gt;DiP&lt;/abbr&gt;, but it still pales in comparison to the number of visitors I got from search traffic. In 2000, I fretted about my “home page” and my “navigation aids.” Nobody cares about any of that anymore, and I have nine years of access logs to prove it.&lt;/p&gt; &lt;p&gt;So, I am writing &lt;abbr title="Dive Into Python3 "&gt;DiP3&lt;/abbr&gt; in pure &lt;abbr&gt;HTML&lt;/abbr&gt; and, modulo some &lt;a href="http://diveintopython3.org/about.html"&gt;lossless minimizations&lt;/a&gt;, publishing exactly what I write. This makes the proofreading feedback cycle faster — instead of “building” the &lt;abbr&gt;HTML&lt;/abbr&gt; output, I just hit &lt;kbd&gt;Ctrl-R&lt;/kbd&gt;. I expected it to make some things more complicated, but they turn out not to matter very much.&lt;/p&gt; &lt;p&gt;Some examples:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;DocBook autonumbers callouts in code blocks. In &lt;abbr&gt;HTML&lt;/abbr&gt;, if I insert a callout in the middle of a code block, I have to renumber the other callouts manually. This has happened a few times, but it’s not something I do all the time.&lt;/li&gt; &lt;li&gt;When I used DocBook, I used custom &lt;abbr&gt;XML&lt;/abbr&gt; entities for each code fragment in a code block. (&lt;i&gt;i.e.&lt;/i&gt; I show a complete function, then I have separate code blocks to show and talk about individual lines of code.) In &lt;abbr&gt;HTML&lt;/abbr&gt;, I copy-and-paste. This hasn’t bit me much yet because I haven’t had to refactor much code. Then again, the &lt;abbr&gt;XML&lt;/abbr&gt; entities technique was also difficult after refactoring, and it required escaping to &lt;abbr&gt;XML&lt;/abbr&gt;’s weird quoting rules.&lt;/li&gt; &lt;li&gt;DocBook let me “chunk” the &lt;abbr&gt;HTML&lt;/abbr&gt; output differently — by section, by chapter, or everything in one big file. I published by section online and let people download as one big file. Nobody cared, and I have logs to prove it. Furthermore, the chapter was always the atomic unit — I would take one concept or one piece of code and build lessons around it for an entire chapter. Splitting up a chapter into multiple pages was just annoying for people who came in from search engines and landed in the middle of a chapter wouldn’t immediately understand the context. And &lt;em&gt;everyone&lt;/em&gt; comes in from search engines.&lt;/li&gt; &lt;li&gt;Related to the previous point, &lt;strong&gt;&lt;abbr&gt;HTML&lt;/abbr&gt; is not an output format.&lt;/strong&gt; &lt;abbr&gt;HTML&lt;/abbr&gt; is &lt;i&gt;The Format&lt;/i&gt;. Not &lt;i&gt;The Format Of Forever&lt;/i&gt;, but damn if it isn’t &lt;i&gt;The Format Of The Now&lt;/i&gt;. Looking back on it now, the &lt;abbr&gt;HTML&lt;/abbr&gt; output from DocBook was &lt;em&gt;atrociously inefficient&lt;/em&gt;. Tables-for-layout for callouts and tips, empty anchors everywhere, and lots of other markup cruft everywhere. Writing my own &lt;abbr&gt;HTML&lt;/abbr&gt;, I can put in only the markup I need — and it turns out I need very little. Callouts are now ordered lists, tips are now blockquotes, etc. Putting an entire chapter on one page sounds bloated, but consider this: my longest chapter so far would be 75 printed pages, and it loads in under 5 seconds. On dialup.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Furthermore, I am no longer under the illusion that this book will be useful forever. Python will either continue to evolve or it will die; either way, static documentation has a shelf life. Today’s cutting edge code is tomorrow’s mainstream code is next year’s legacy code. &lt;abbr&gt;DiP&lt;/abbr&gt;’s shelf life was about 10 years. I am supremely confident that the &lt;abbr&gt;HTML&lt;/abbr&gt; I’m writing today will still be readable 10 years from now, and after that it won’t matter because I’ll have to rewrite the whole damn book anyway.&lt;/p&gt; &lt;p&gt;See you in 2020 for &lt;cite&gt;Dive Into Python 4&lt;/cite&gt;!&lt;/p&gt;
		</content>
		<author>
			<name>
				Mark
			</name>
		</author>
		<source gr:stream-id="feed/http://diveintomark.org/feed">
			<id>
				tag:google.com,2005:reader/feed/http://diveintomark.org/feed
			</id>
			<title type="html">
				dive into mark
			</title>
			<link rel="alternate" href="http://diveintomark.org/" type="text/html" />
		</source>
	</entry>
	<entry gr:is-read-state-locked="true" gr:crawl-timestamp-msec="1237669508893">
		<id gr:original-id="tag:diveintomark.org,2009-03-21:/archives/20090321200928">
			tag:google.com,2005:reader/item/9214f10e26ce1759
		</id>
		<category term="user/16823450566733491518/state/com.google/read" scheme="http://www.google.com/reader/" label="read" /><category term="unfiled" scheme="http://diveintomark.org" /><category term="accessibility" scheme="http://diveintomark.org" />
		<title type="html">
			Accessibility is a harsh mistress
		</title>
		<published>
			2009-03-21T20:09:28Z
		</published>
		<updated>
			2009-03-22T01:05:37Z
		</updated>
		<link rel="alternate" href="http://diveintomark.org/archives/2009/03/21/accessibility-is-a-harsh-mistress" type="text/html" />
		<content xml:base="http://diveintomark.org/archives/2009/03/21/accessibility-is-a-harsh-mistress" xml:lang="en" type="html">
			&lt;p&gt;&lt;a href="http://www.intertwingly.net/blog/2009/03/20/Accessible"&gt;Sam Ruby&lt;/a&gt;:&lt;/p&gt; &lt;blockquote&gt; &lt;p&gt;This blog entry has an [inline &lt;abbr&gt;SVG&lt;/abbr&gt;] image with a text alternative. Who does it benefit?&lt;/p&gt; &lt;/blockquote&gt; &lt;p&gt;Short answer: no one, but you have to do it anyway.&lt;/p&gt; &lt;p&gt;Long answer: As far as I know, none of the commercially available screenreaders support &lt;abbr&gt;SVG&lt;/abbr&gt; in any way, much less reading the title of an &lt;abbr&gt;SVG&lt;/abbr&gt; image included inline in an &lt;abbr&gt;XHTML&lt;/abbr&gt; page (as opposed to, say, linked from the &lt;code&gt;src&lt;/code&gt; attribute of an &lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt; element, or embedded in an &lt;code&gt;&amp;lt;object&amp;gt;&lt;/code&gt; element). Nonetheless, you have provided a text alternative for the image, and &lt;em&gt;theoretically&lt;/em&gt;, that &lt;em&gt;could&lt;/em&gt; be presented to a user in place of (or in addition to) the image. You have therefore fulfilled your moral duty, even though no one &lt;em&gt;actually&lt;/em&gt; benefits from it. Welcome to the wacky world of &lt;i&gt;access enablement&lt;/i&gt;.&lt;/p&gt; &lt;p&gt;The concept of access enablement is not complicated. In the physical world, it works like this: I build the ramp, you bring the wheelchair. I don’t have to provide you with a wheelchair; it’s up to you to procure one. Nor do I have to teach you how to use your wheelchair to get up my ramp. Nor do I have to push you up the ramp when you arrive. If your wheelchair happens to break at the bottom of my ramp, you can’t sue me for being inaccessible. I did my part: I built the ramp; everything else is &lt;a href="http://en.wikipedia.org/wiki/Somebody_Else&amp;#39;s_Problem"&gt;Somebody Else’s Problem&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;For better or for worse, this concept got translated directly into the virtual world of software. Just as there are standards that define the minimum width and maximum slope of wheelchair-accessible ramps, so too there are standards for building accessible software and authoring accessible content. In the desktop software world, priority #1 is to &lt;a href="http://blog.whatwg.org/this-week-day-in-html-5-episode-24"&gt;keep track of the focus&lt;/a&gt;. In the web authoring world, it’s to &lt;a href="http://www.w3.org/TR/WCAG20/#text-equiv"&gt;provide text alternatives for any non-text content&lt;/a&gt;. The exact techniques vary by medium. For the &lt;abbr&gt;HTML&lt;/abbr&gt; &lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt; element, the guidelines say you must &lt;a href="http://www.whatwg.org/specs/web-apps/current-work/#alt"&gt;provide an &lt;code&gt;alt&lt;/code&gt; attribute&lt;/a&gt; and (potentially) &lt;a href="http://blog.whatwg.org/the-longdesc-lottery"&gt;a &lt;code&gt;longdesc&lt;/code&gt; attribute&lt;/a&gt;. For &lt;abbr&gt;SVG&lt;/abbr&gt;, they mandate a &lt;a href="http://www.w3.org/TR/SVG-access/#Equivalent"&gt;&lt;code&gt;&amp;lt;title&amp;gt;&lt;/code&gt; child element&lt;/a&gt; and (potentially) a &lt;code&gt;&amp;lt;desc&amp;gt;&lt;/code&gt; element.&lt;/p&gt; &lt;p&gt;The interesting part is not what the guidelines say, but what they do not say.&lt;/p&gt; &lt;ol&gt; &lt;li&gt;&lt;strong&gt;No thought of complexity for authors.&lt;/strong&gt; What are the chances that the author is even qualified to write a long description for a complex graph? Or &lt;a href="http://joeclark.org/book/sashay/serialization/Chapter13.html#h2-1450"&gt;captions for a video&lt;/a&gt;? And if they’re not, how much would it cost to pay someone else to do it? How long would it take for them (or someone they hire) to implement it? Would that delay cause other problems or present other opportunity costs?&lt;/li&gt; &lt;li&gt;&lt;strong&gt;No thought of implementation cost for authoring tool vendors.&lt;/strong&gt; Is it reasonable to expect authors to provide text alternatives to a photo they take with their cellphone and upload to a photo sharing site? Is it reasonable to expect tools to enforce this?&lt;/li&gt; &lt;li&gt;&lt;strong&gt;No mention of implementation cost for client software.&lt;/strong&gt; Can screenreader vendors justify the cost of implementing and maintaining support for rarely-used features, e.g. reading the title of an inline &lt;abbr&gt;SVG&lt;/abbr&gt; image when only one site in the world actually does that? What about the cost of implementing workarounds for bogus data for popular-but-misused features?&lt;/li&gt; &lt;li&gt;&lt;strong&gt;No mention of how end users would learn about the feature.&lt;/strong&gt;&lt;/li&gt; &lt;/ol&gt; &lt;p&gt;So here’s the crux of the problem: &lt;strong&gt;nowhere in the process of defining an accessibility feature is there any consideration for how often it would be used, how often it would be used correctly, what would happen if it were used incorrectly, how much it would cost to implement it, or how users would learn about the feature.&lt;/strong&gt; In short, there is no cost-benefit analysis.&lt;/p&gt; &lt;p&gt;Now, some features are simple and easy and popular, so these questions never come up. If enough authors use them and tool vendors implement them and end users learn about them, then everything works. But not every feature is simple or easy or popular; a lot of them are waaaaay down the “long tail” of usage + implementation + education. So far down that, in any other field, you would start talking about the law of diminishing returns. But in accessibility, there is no such limit.&lt;/p&gt; &lt;p&gt;Some concrete examples: most browsers don’t expose information about the access keys available on a page, and most authors don’t define access keys in their pages, and those that do often conflict with other browser, &lt;abbr&gt;AT&lt;/abbr&gt;, or &lt;abbr&gt;OS&lt;/abbr&gt;-level shortcuts. Most images aren’t complex enough warrant a long description, and &lt;a href="http://blog.whatwg.org/the-longdesc-lottery"&gt;most authors who try to offer a long description get it wrong&lt;/a&gt;. But it is just assumed that users who would benefit from them will somehow learn of their existence and be motivated to find software that supports them (assuming they can ever find a page that uses them).&lt;/p&gt; &lt;p&gt;The accessibility orthodoxy does not permit people to question the value of features that are rarely useful and rarely used.&lt;/p&gt; &lt;p&gt;When this orthodoxy collides with reality, the results are both humorous and sad. When I was an accessibility architect at IBM, I assisted in the final stages of ensuring that Eclipse’s &lt;a href="http://help.eclipse.org/ganymede/index.jsp?topic=/org.eclipse.gef.doc.isv/guide/guide.html"&gt;Graphical Editing Framework&lt;/a&gt; was fully accessible to blind people. This involved ensuring that all possible objects were focusable, all possible actions were keyboard-accessible (including drag-and-drop), and all possible information about nodes and connectors was exposed to third-party assistive technologies via &lt;a href="http://msdn.microsoft.com/en-us/library/ms971310.aspx"&gt;MSAA&lt;/a&gt;. It was mind-numbing work, full of strange edge cases and bizarre hypothetical situations, not unlike the one Sam is struggling to understand. During one particularly difficult teleconference, an Eclipse developer muttered something like, “You realize no one is ever actually going to do any of this, right?” There was an awkward silence as the people who had spent their lives in the trenches of access enablement contemplated the very real possibility that no one would ever benefit from their work.&lt;/p&gt; &lt;p&gt;Back to Sam’s question. Few authors publish in &lt;a href="http://diveintomark.org/archives/2003/03/19/the_road_to_xhtml_20"&gt;true &lt;abbr&gt;XHTML&lt;/abbr&gt; mode&lt;/a&gt;, fewer still include &lt;a href="http://www.intertwingly.net/blog/2006/06/17/Inline-SVG"&gt;inline &lt;abbr&gt;SVG&lt;/abbr&gt; images&lt;/a&gt; in their &lt;abbr&gt;XHTML&lt;/abbr&gt;, and fewer still include &lt;a href="http://www.intertwingly.net/blog/2009/03/20/Accessible"&gt;titles or descriptions in those images&lt;/a&gt;. But &lt;em&gt;in theory&lt;/em&gt;, you can imagine a situation where a web author publishes in true &lt;abbr&gt;XHTML&lt;/abbr&gt; mode, &lt;strong&gt;and&lt;/strong&gt; the author includes an inline &lt;abbr&gt;SVG&lt;/abbr&gt; image within an &lt;abbr&gt;XHTML&lt;/abbr&gt; page, &lt;strong&gt;and&lt;/strong&gt; an end user is using a browser that supports true &lt;abbr&gt;XHTML&lt;/abbr&gt;, &lt;strong&gt;and&lt;/strong&gt; that user is using a hypothetical screenreader-of-the-future that implements support for the &lt;code&gt;&amp;lt;title&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;desc&amp;gt;&lt;/code&gt; elements within inline &lt;abbr&gt;SVG&lt;/abbr&gt; images within &lt;abbr&gt;XHTML&lt;/abbr&gt; pages, &lt;strong&gt;and&lt;/strong&gt; that user stumbles across that page. It’s theoretically possible, therefore you have to do it. Period. End of discussion.&lt;/p&gt; &lt;p&gt;Now go retrofit text alternatives into every &lt;abbr&gt;SVG&lt;/abbr&gt; image you’ve ever published, or an accessibility advocacy group who has never visited your site will sue you on behalf of all the users you’ve been disenfranchising. All zero of them.&lt;/p&gt;
		</content>
		<author>
			<name>
				Mark
			</name>
		</author>
		<source gr:stream-id="feed/http://diveintomark.org/feed">
			<id>
				tag:google.com,2005:reader/feed/http://diveintomark.org/feed
			</id>
			<title type="html">
				dive into mark
			</title>
			<link rel="alternate" href="http://diveintomark.org/" type="text/html" />
		</source>
	</entry>
	<entry gr:is-read-state-locked="true" gr:crawl-timestamp-msec="1237416331323">
		<id gr:original-id="tag:diveintomark.org,2009-03-18:/archives/20090318190703">
			tag:google.com,2005:reader/item/de30b05059beca66
		</id>
		<category term="user/16823450566733491518/state/com.google/read" scheme="http://www.google.com/reader/" label="read" /><category term="unfiled" scheme="http://diveintomark.org" /><category term="accessibility" scheme="http://diveintomark.org" /><category term="html5" scheme="http://diveintomark.org" />
		<title type="html">
			If it fails for some, it should fail for all
		</title>
		<published>
			2009-03-18T19:07:03Z
		</published>
		<updated>
			2009-03-18T22:47:43Z
		</updated>
		<link rel="alternate" href="http://diveintomark.org/archives/2009/03/18/if-it-fails-for-some" type="text/html" />
		<content xml:base="http://diveintomark.org/archives/2009/03/18/if-it-fails-for-some" xml:lang="en" type="html">
			&lt;p&gt;On the topic of &lt;code&gt;&amp;lt;canvas&amp;gt;&lt;/code&gt; accessibility, &lt;a href="http://lists.w3.org/Archives/Public/public-html/2009Mar/0394.html"&gt;John Foliot writes&lt;/a&gt;:&lt;/p&gt; &lt;blockquote&gt; &lt;p&gt;Finally, I propose that any instance of &lt;code&gt;&amp;lt;canvas&amp;gt;&lt;/code&gt; that lacks at a minimum the 2 proposed mandatory values be non-conformant and not render on screen.&lt;/p&gt; &lt;/blockquote&gt; &lt;p&gt;When &lt;a href="http://lists.w3.org/Archives/Public/public-html/2009Mar/0420.html"&gt;pressed for an explanation&lt;/a&gt;, &lt;a href="http://lists.w3.org/Archives/Public/public-html/2009Mar/0418.html"&gt;John continues&lt;/a&gt;:&lt;/p&gt; &lt;blockquote&gt; &lt;p&gt;Actually, yes, I have &lt;a href="http://html4all.org/pipermail/list_html4all.org/2008-April/000797.html"&gt;proposed this form of draconian response before&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;It’s about consequences: until such time as there are real consequences for slack developers/tools that allows content to exist that is incomplete, then there will be content that is incomplete – it’s a simple as that. Why would &lt;code&gt;&amp;lt;img src=&amp;quot;path...&amp;quot; /&amp;gt;&lt;/code&gt; be any more complete than &lt;code&gt;&amp;lt;img alt=&amp;quot;Photo of a leprechaun&amp;quot; /&amp;gt;&lt;/code&gt;? I mean, clearly, anyone processing that info in their user-agent will ‘get’ the intent of the author, right? Yet today, the first example will render in the browser, the second delivers a ‘fail’. Ergo (to me) there is a problem of inequity here that must be addressed – if it fails for some, it should fail for all.&lt;/p&gt; &lt;/blockquote&gt; &lt;p&gt;&lt;strong&gt;If it fails for some, it should fail for all.&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;John also believes that &lt;a href="http://lists.w3.org/Archives/Public/public-html/2008Aug/0407.html"&gt;Flickr is (or at least should be) illegal&lt;/a&gt; because it allows people to publish inaccessible content. I’ll pause for a moment and let that sink in.&lt;/p&gt; &lt;p&gt;.&lt;br&gt;.&lt;br&gt;.&lt;/p&gt; &lt;p&gt;It’s important to understand just how extreme these views are, even within the accessibility community. I was a professional accessibility architect for several years; before that, I took an intense interest in web accessibility; long before that, I was a &lt;a href="http://relayservices.att.com/"&gt;relay operator for AT&amp;amp;T&lt;/a&gt;. A few years ago, I had the pleasure of attending the annual &lt;a href="http://www.csun.edu/cod/conf/"&gt;CSUN accessibility conference&lt;/a&gt;, where I helped staff the Mozilla booth and talked about Firefox’s accessibility features to anyone who would listen. So I have had the opportunity to speak to a great many people who cared about accessibility, authored accessible content, wrote accessible software, designed accessible hardware, and provided accessibility services.&lt;/p&gt; &lt;p&gt;In all that time, in all those conversations, with all those people, I have never heard anyone say, “Seriously, you know what we should do to make the world more accessible? Fuck over all the sighted people.”&lt;/p&gt; &lt;p&gt;I know that most of the people who care about accessibility do not have the time or resources to follow the daily machinations of the HTML 5 working groups. That’s fine; standards take a long time and require a lot of attention, and most people have day jobs somewhere else. But I have observed a kind of “conventional wisdom” taking hold in this wider community — that the HTML working group doesn’t care about accessibility, that any and all proposals are rejected, that the views of “experts” are simply dismissed out of hand.&lt;/p&gt; &lt;p&gt;I think it would be wise for people who truly care about accessibility to take a closer look at the so-called “experts” who are participating on their behalf, and to understand exactly what these people are proposing. It’s true that some of their proposals have not been adopted, but it’s not because some cartoonishly monocled villain enjoys being mean to them. It’s because the proposals are insane.&lt;/p&gt;
		</content>
		<author>
			<name>
				Mark
			</name>
		</author>
		<source gr:stream-id="feed/http://diveintomark.org/feed">
			<id>
				tag:google.com,2005:reader/feed/http://diveintomark.org/feed
			</id>
			<title type="html">
				dive into mark
			</title>
			<link rel="alternate" href="http://diveintomark.org/" type="text/html" />
		</source>
	</entry>
	<entry gr:is-read-state-locked="true" gr:crawl-timestamp-msec="1231713523997">
		<id gr:original-id="tag:diveintomark.org,2009-01-11:/archives/20090111212840">
			tag:google.com,2005:reader/item/f4a4d379157de9e2
		</id>
		<category term="user/16823450566733491518/state/com.google/read" scheme="http://www.google.com/reader/" label="read" /><category term="unfiled" scheme="http://diveintomark.org" /><category term="personal" scheme="http://diveintomark.org" />
		<title type="html">
			Immersed in the Googleplex ball pit
		</title>
		<published>
			2009-01-11T21:28:40Z
		</published>
		<updated>
			2009-01-11T21:29:04Z
		</updated>
		<link rel="alternate" href="http://diveintomark.org/archives/2009/01/11/bff" type="text/html" />
		<content xml:base="http://diveintomark.org/archives/2009/01/11/bff" xml:lang="en" type="html">
			&lt;p&gt;&lt;img src="http://wearehugh.com/public/2009/01/2009-01-09-michael-and-mark-in-googleplex-ballpit.jpg" alt="Michael and Mark in ball pit in Googleplex building 42" width="640" height="480"&gt;&lt;/p&gt;
		</content>
		<author>
			<name>
				Mark
			</name>
		</author>
		<source gr:stream-id="feed/http://diveintomark.org/feed">
			<id>
				tag:google.com,2005:reader/feed/http://diveintomark.org/feed
			</id>
			<title type="html">
				dive into mark
			</title>
			<link rel="alternate" href="http://diveintomark.org/" type="text/html" />
		</source>
	</entry>
	<entry gr:is-read-state-locked="true" gr:crawl-timestamp-msec="1231467728971">
		<id gr:original-id="tag:diveintomark.org,2009-01-09:/archives/20090109021141">
			tag:google.com,2005:reader/item/a6a57a78ed5826b3
		</id>
		<category term="user/16823450566733491518/state/com.google/read" scheme="http://www.google.com/reader/" label="read" /><category term="unfiled" scheme="http://diveintomark.org" /><category term="encoding" scheme="http://diveintomark.org" /><category term="GIVE" scheme="http://diveintomark.org" /><category term="video" scheme="http://diveintomark.org" />
		<title type="html">
			A gentle introduction to video encoding, part 5: constraints
		</title>
		<published>
			2009-01-09T02:11:41Z
		</published>
		<updated>
			2009-01-09T02:23:31Z
		</updated>
		<link rel="alternate" href="http://diveintomark.org/archives/2009/01/08/give-part-5-constraints" type="text/html" />
		<content xml:base="http://diveintomark.org/archives/2009/01/08/give-part-5-constraints" xml:lang="en" type="html">
			&lt;p&gt;[Part of an &lt;a href="http://diveintomark.org/tag/give"&gt;ongoing series&lt;/a&gt;.]&lt;/p&gt; &lt;p&gt;I had lunch with my father the other day, and I explained this series as well as I could to someone who didn’t start programming when he was 11. His immediate reaction was, “Why are there so many different formats? Why can’t everybody just agree on a single format? It is political, or technical, or both?” The short answer is, it’s both. The history of video in any medium — and especially since the explosion of amateur digital video — has been marred by a string of companies who wanted to use &lt;a href="http://diveintomark.org/archives/2008/12/18/give-part-1-container-formats/"&gt;container formats&lt;/a&gt; and &lt;a href="http://diveintomark.org/archives/2008/12/19/give-part-2-lossy-video-codecs"&gt;video codecs&lt;/a&gt; as tools to lock content producers and content consumers into their little fiefdoms. Own the format, own the future. And when I say “history” — well, it’s still going on. Tried to play a Windows Media Video on Mac OS X lately? The &lt;a href="http://www.telestream.net/flip4mac-wmv/overview.htm"&gt;codec and container support is out there&lt;/a&gt;, but it’s not baked in. Want to watch &lt;a href="http://www.apple.com/trailers/"&gt;movie trailers on Apple.com&lt;/a&gt;? Please install QuickTime. And so forth and so on. The only thing that was pre-installed on both platforms was Flash, so when a few startups dipped their toes into the Internet video waters, the ones that used Flash Video won despite it being an objectively inferior codec. (Some revision of Flash 9 added support for H.264 video, AAC audio, and the MP4 container, which is what &lt;a href="http://www.youtube.com/browse?s=mphd&amp;amp;c=0&amp;amp;l=&amp;amp;b=0"&gt;YouTube HD&lt;/a&gt; uses.)&lt;/p&gt; &lt;p&gt;So that’s the politics. But there are also technical barriers. As with all engineering, video encoding is primarily about constraints. I can think of 10 just off the top of my head:&lt;/p&gt; &lt;ol&gt; &lt;li&gt;&lt;strong&gt;CPU capacity for decoding and playing in real time&lt;/strong&gt;. This is one of the most important constraints, since &lt;em&gt;video is meant to be watched in real time&lt;/em&gt;. That sounds simple, but it’s incredibly complex. Every video you’ve ever watched in your entire life had to be decoded and played in real time. Otherwise it stutters and the viewing experience sucks. And we’re talking about video here; if the viewing experience sucks, there’s nothing left. Some codecs are just more complex than others, and that translates into higher system requirements to decode videos in real time. &lt;a href="http://diveintomark.org/archives/2008/12/19/give-part-2-lossy-video-codecs#h264"&gt;As I’ve mentioned before&lt;/a&gt;, some codecs are now decoded by specialized hardware. iPhones have a little chip inside them that understands H.264 Baseline Profile; without that, the iPhone would need a Core 2 Duo processor to play movies, and it would have a battery life of 10 minutes.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Codec compatibility&lt;/strong&gt;. Normal people won’t download codecs or plug-ins just to watch a dog on a skateboard, or even to watch a trailer for a $100 million blockbuster. (Sadly, they &lt;em&gt;will&lt;/em&gt; download plug-ins for porn, but those are invariably trojan horses. Or so I’ve read. Moving on…) The phone in your pocket can probably play AMR ringtones, maybe MP3 ringtones, but probably not Vorbis ringtones (unless you have an Android phone) — and you probably couldn’t download new codecs even if you wanted to (which, I must reiterate, nobody wants to). Apple and Real Networks tried for &lt;em&gt;years&lt;/em&gt; to corner the web video market, but 99% of schmucks with a browser have Flash, so Flash video won on the web. Meanwhile, Firefox 3.1 will ship with support for the &lt;code&gt;&amp;lt;video&amp;gt;&lt;/code&gt; element but will only support Theora and Vorbis in an Ogg container — even if your underlying operating system ships with other codecs.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;CPU capacity for encoding&lt;/strong&gt;. Encoding takes a long time. Taking my home movie from iMovie to a DVD used to take 8 hours on a Powerbook G4 laptop. These days you can rip a DVD movie with Xvid in 30 minutes, or you can rip it with a more complex codec with all optional features turned on, and maybe it’ll still take 8 hours. It’ll look better, but will it look 16 times better? If you’re only doing it once, maybe you don’t care. If you’re running YouTube and people are uploading 13 hours of video every minute, maybe you do. CPU cycles aren’t free; at that scale, they’re not even cheap. (That’s a real statistic, by the way; I got it from the page on the Google intranet entitled “What can we tell non-Googlers?” and it’s accurate as of September 2008.)&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Acceptable delay between recording and delivery&lt;/strong&gt;. In my own experience, videos I’ve uploaded on YouTube are available within minutes, which is just mind-boggling when you consider the volume. If you’re re-encoding a live stream, even a few minutes delay is probably unacceptable. That means you’ll need a faster encoder, a less complex codec, or lower quality settings.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Audience size&lt;/strong&gt;. It’s not a big secret that lots of video on the Internet looks like crap. Partly that’s because the video uploader uploaded crappy video, but it’s also because most Internet videos are only watched by a few people, and it’s just not a worthwhile tradeoff to spend 8 hours re-encoding it. On the other hand, if you’re mastering a DVD that’ll get sold to 10 million people, you’ll probably use higher quality settings.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Screen dimensions&lt;/strong&gt;. DVDs can’t store high-def 1920 x 1080 video because the standard doesn’t allow for it, which makes perfect sense because it was designed around the screen resolution of standard-def TVs. Blu-Ray ups the limit, but there’s still a limit. Screen sizes vary more for PC video, but there will always be practical upper limits depending on your audience.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;My bandwidth&lt;/strong&gt;. If you’re streaming or downloading video, some percentage of your audience is probably living in a third-world country like the United States, with limited broadband access, slow speeds, and monthly bandwidth caps. Larger file size = longer wait to play = fewer videos watched overall.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Your bandwidth&lt;/strong&gt;. Obviously every bit I download is a bit that you upload, and bandwidth ain’t free either. “When I get a little money I buy bandwidth; and if any is left I buy food and clothes.” Or something like that.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Hard limits on storage size&lt;/strong&gt;. As I mentioned before, physical media has upper limits on total size. Commercial DVDs can hold upwards of 9 GB, which seems like a lot but really isn’t. Blu-Ray maxes out at 50 GB, which seems like a lot but really isn’t.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Patents / licensing costs&lt;/strong&gt;. Did I mention that most popular video codecs are patent-encumbered? This is why &lt;a href="http://commons.wikimedia.org/wiki/Commons:Media_help"&gt;Wikimedia uses Theora exclusively&lt;/a&gt;, and why Firefox can ship a native Theora decoder and but won’t ever ship H.264.&lt;/li&gt; &lt;/ol&gt; &lt;p&gt;…and that’s the &lt;em&gt;short&lt;/em&gt; list.&lt;/p&gt; &lt;p&gt;All of which leads me to the Zen of video encoding, which is this:&lt;/p&gt; &lt;blockquote&gt; &lt;p&gt;There is no right or wrong. There is only what works and what doesn’t.&lt;/p&gt; &lt;/blockquote&gt; &lt;p&gt;If you can find even one combination of tools, delivery devices, and target platforms that satisfies your constraints and still accomplishes your goals, congratulations. You’re ahead of 99% of the people who’ve tried.&lt;/p&gt; &lt;p&gt;Tomorrow: specifics on common devices/platforms and their limitations.&lt;/p&gt;
		</content>
		<author>
			<name>
				Mark
			</name>
		</author>
		<source gr:stream-id="feed/http://diveintomark.org/feed">
			<id>
				tag:google.com,2005:reader/feed/http://diveintomark.org/feed
			</id>
			<title type="html">
				dive into mark
			</title>
			<link rel="alternate" href="http://diveintomark.org/" type="text/html" />
		</source>
	</entry>
	<entry gr:is-read-state-locked="true" gr:crawl-timestamp-msec="1231455539364">
		<id gr:original-id="tag:diveintomark.org,2009-01-08:/archives/20090108222721">
			tag:google.com,2005:reader/item/567700acbe84671b
		</id>
		<category term="user/16823450566733491518/state/com.google/read" scheme="http://www.google.com/reader/" label="read" /><category term="unfiled" scheme="http://diveintomark.org" /><category term="encoding" scheme="http://diveintomark.org" /><category term="GIVE" scheme="http://diveintomark.org" /><category term="presentation" scheme="http://diveintomark.org" /><category term="video" scheme="http://diveintomark.org" />
		<title type="html">
			A gentle introduction to video encoding: the slides
		</title>
		<published>
			2009-01-08T22:27:21Z
		</published>
		<updated>
			2009-01-09T20:46:49Z
		</updated>
		<link rel="alternate" href="http://diveintomark.org/archives/2009/01/08/give-slides" type="text/html" />
		<content xml:base="http://diveintomark.org/archives/2009/01/08/give-slides" xml:lang="en" type="html">
			&lt;p&gt;My tech talk went extremely well. Lots of people, lots of great questions. I can’t share the video because we talked about some internal Youtube stuff, but here are the slides:&lt;/p&gt; &lt;iframe src="http://reader.googleusercontent.com/reader/embediframe?src=http://static.slideshare.net/swf/ssplayer2.swf?doc%3Dgiveparts1through4200901public-1231522537516765-2%26stripped_title%3Da-gentle-introduction-to-video-encoding-diveintomark-presentation&amp;amp;width=425&amp;amp;height=355" width="425" height="355"&gt;&lt;/iframe&gt; &lt;p&gt;&lt;a href="http://wearehugh.com/public/2009/01/GIVE-parts-1-through-4-2009-01-public.odp"&gt;Download as OpenDocument presentation&lt;/a&gt;&lt;/p&gt;
		</content>
		<author>
			<name>
				Mark
			</name>
		</author>
		<source gr:stream-id="feed/http://diveintomark.org/feed">
			<id>
				tag:google.com,2005:reader/feed/http://diveintomark.org/feed
			</id>
			<title type="html">
				dive into mark
			</title>
			<link rel="alternate" href="http://diveintomark.org/" type="text/html" />
		</source>
	</entry>
	<entry gr:is-read-state-locked="true" gr:crawl-timestamp-msec="1231310397977">
		<id gr:original-id="tag:diveintomark.org,2009-01-07:/archives/20090107063414">
			tag:google.com,2005:reader/item/55d297c7560edf0a
		</id>
		<category term="user/16823450566733491518/state/com.google/read" scheme="http://www.google.com/reader/" label="read" /><category term="unfiled" scheme="http://diveintomark.org" /><category term="accessibility" scheme="http://diveintomark.org" /><category term="captioning" scheme="http://diveintomark.org" /><category term="GIVE" scheme="http://diveintomark.org" /><category term="haali" scheme="http://diveintomark.org" /><category term="mp4" scheme="http://diveintomark.org" /><category term="mplayer" scheme="http://diveintomark.org" /><category term="sami" scheme="http://diveintomark.org" /><category term="smil" scheme="http://diveintomark.org" /><category term="srt" scheme="http://diveintomark.org" /><category term="ssa" scheme="http://diveintomark.org" /><category term="subtitles" scheme="http://diveintomark.org" /><category term="video" scheme="http://diveintomark.org" /><category term="vlc" scheme="http://diveintomark.org" /><category term="vsfilter" scheme="http://diveintomark.org" />
		<title type="html">
			A gentle introduction to video encoding, part 4: captioning
		</title>
		<published>
			2009-01-07T06:34:14Z
		</published>
		<updated>
			2009-01-07T22:18:50Z
		</updated>
		<link rel="alternate" href="http://diveintomark.org/archives/2009/01/07/give-part-4-captioning" type="text/html" />
		<content xml:base="http://diveintomark.org/archives/2009/01/07/give-part-4-captioning" xml:lang="en" type="html">
			&lt;p&gt;[Part of an &lt;a href="http://diveintomark.org/tag/give"&gt;ongoing series&lt;/a&gt;.]&lt;/p&gt; &lt;p&gt;The first thing you need to know about captions and subtitles is that &lt;a href="http://joeclark.org/access/captioning/bpoc/ST.html"&gt;captions and subtitles are different&lt;/a&gt;. The second thing you need to know about captions and subtitles is that you can safely ignore the differences unless you’re creating your own from scratch. I’m going to use the terms interchangeably throughout this article, which will probably drive you crazy if you happen to know and care about the difference.&lt;/p&gt; &lt;p&gt;Historically, captioning has been driven by the needs of deaf and hearing impaired consumers, and captioning technology has been designed around &lt;a href="http://en.wikipedia.org/wiki/Closed_captioning#Television_and_video"&gt;the technical quirks of broadcast television&lt;/a&gt;. In the United States, so-called “&lt;a href="http://main.wgbh.org/wgbh/pages/mag/services/captioning/faq/"&gt;closed captions&lt;/a&gt;” are embedded into a part of the NTSC video source (”Line 21″) that is normally outside the viewing area on televisions. In Europe, they use a completely different system that is embeddable in the PAL video source. Over time, each new medium (VHS, DVD, and now online digital video) has dealt a blow to the accessibility gains of the previous medium. For example:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;PAL VHS tapes did not have enough bandwidth to store closed captions at all.&lt;/li&gt; &lt;li&gt;DVDs have the technical capability, but producers often manage to screw it up anyway; e.g. DVDs of low-budget television shows are often released without the closed captions that accompanied the original broadcast.&lt;/li&gt; &lt;li&gt;HDMI cables drop “Line 21″ closed captions altogether. If you play an NTSC DVD on an HDTV over HDMI, you’ll never see the closed captions, even if the DVD has them.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;And &lt;a href="http://joeclark.org/book/sashay/serialization/Chapter13.html"&gt;accessible online video is just fucking hopeless&lt;/a&gt;. (And no, it won’t change &lt;a href="http://www.alistapart.com/articles/thisishowthewebgetsregulated/"&gt;unless new regulation forces it to change&lt;/a&gt;. When it comes to captioning, Joe Clark has been right longer than many of you have been alive.)&lt;/p&gt; &lt;p&gt;So even in broadcast television, captioning technology was fractured by different broadcast technologies in different countries. Digital video had the capability of unifying the technologies and learning from their mistakes. Of course, exactly the opposite happened. Early caption formats split along company lines; each major video software platform (RealPlayer, QuickTime, Windows Media, Adobe Flash) implemented captioning in their own way, with levels of adoption ranging from nil to zilch. At the same time, an entire subculture developed around “&lt;a href="http://en.wikipedia.org/wiki/Fansub"&gt;fan-subbing&lt;/a&gt;,” i.e. using captioning technology to provide translations of foreign language videos. For example, non-Japanese-speaking consumers wanted to watch Japanese anime films, so amateur translators stepped up to publish their own English captions that could be overlaid onto the original film. In the 1980s, fansubbers would actually take VHS tapes and overlay the English captions onto a new tape, which they would then (illegally) distribute. Nowadays, translators can simply publish their work on the Internet as a standalone file. English-speaking consumers can have their DVDs shipped directly from Japan, and they use software players that can overlay standalone English caption files while playing their Japanese-only DVDs. The legality of distributing these unofficial translations (even separately, in the form of standalone caption files) &lt;a href="http://www.nytimes.com/2005/08/21/arts/21solo.html"&gt;has been disputed in recent years&lt;/a&gt;, but the fansubbing community persists.&lt;/p&gt; &lt;p&gt;Technically, there is a lot of variation in captioning formats. At their core, captions are a combination of text to display, start and end times to display it, information about where to position the text on a screen, fonts, styling, alignment, and so on. Some captions roll up from the bottom of the screen, others simply appear and disappear at the appropriate time. Some caption formats mandate where each caption should be placed and how it should be styled; others merely suggest position and styling; others leave all display attributes entirely up to the player. Almost every conceivable combination of these variables has been tried. Some forms of media try multiple combinations at once. DVDs, for example, can have two entirely distinct forms of captioning — closed captioning (as used in NTSC broadcast television) embedded in the video stream, and one or more subtitle tracks. DVD subtitle tracks are used for many different things, including subtitles (just the words being spoken, in the same language as the audio), captions for the hearing impaired (which include extra notations of background noises and such), translations into other languages, and director’s commentary. Oh, and they’re stored on the DVD as images, not text, so the end user has no control over fonts or font size.&lt;/p&gt; &lt;p&gt;Beyond DVDs, most caption formats store the captions as text, which inevitably raises the issue of character encoding. Some caption formats explicitly specify the character encoding, others only allow UTF-8, others don’t specify any encoding at all. On the player side, most players respect the character encoding if present (but may only support specific encodings); in its absence, some players assume UTF-8, some guess the encoding, and some allow the user to override the encoding. Obviously standalone caption files can be in any format, but if you want to embed your captions as a track within a &lt;a href="http://diveintomark.org/archives/2008/12/18/give-part-1-container-formats"&gt;video container&lt;/a&gt;, your choices are limited to the caption formats that the video container supports.&lt;/p&gt; &lt;p&gt;And remember when I said that there were a &lt;a href="http://diveintomark.org/archives/2008/12/30/give-part-3-lossy-audio-codecs"&gt;metric fuck-ton of audio codecs&lt;/a&gt;? Forget that. There are an &lt;em&gt;imperial fuck-ton&lt;/em&gt; of caption formats (i.e. multiply by 9/5 and add 32). Here is a &lt;em&gt;partial&lt;/em&gt; list of caption formats, taken from the list of formats supported by &lt;a href="http://www.urusoft.net/products.php?cat=sw"&gt;Subtitle Workshop&lt;/a&gt;, which I used to caption my &lt;a href="http://diveintomark.org/tag/diveintomarkshow"&gt;short-lived video podcast series&lt;/a&gt;:&lt;/p&gt; &lt;blockquote&gt; &lt;p&gt;Adobe Encore DVD, Advanced SubStation Alpha, AQTitle, Captions 32, Captions DAT, Captions DAT Text, Captions Inc., Cheetah, CPC-600, DKS Subtitle Format, DVD Junior, DVD Studio Pro, DVD Subtitle System, DVDSubtitle, FAB Subtitler, IAuthor Script, Inscriber CG, JACOSub 2.7+, Karaoke Lyrics LRC, Karaoke Lyrics VKT, KoalaPlayer, MacSUB, MicroDVD, MPlayer, MPlayer2, MPSub, OVR Script, Panimator, Philips SVCD Designer, Phoenix Japanimation Society, Pinnacle Impression, PowerDivX, PowerPixel, QuickTime Text, RealTime, SAMI Captioning, Sasami Script, SBT, Sofni, Softitler RTF, SonicDVD Creator, Sonic Scenarist, Spruce DVDMaestro, Spruce Subtitle File, Stream SubText Player, Stream SubText Script, SubCreator 1.x, SubRip, SubSonic, SubStation Alpha, SubViewer 1.0, SubViewer 2.0, TMPlayer, Turbo Titler, Ulead DVD Workshop 2.0, ViPlay Subtitle File, ZeroG.&lt;/p&gt; &lt;/blockquote&gt; &lt;p&gt;Which of these formats are important? The answer will depend on whom you ask, and more specifically, how you’re planning to distribute your video. This series is primarily focused on videos delivered as files to be played on PCs or other computing devices, so my choices here will reflect that. These are some of the most well-supported caption formats:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href="http://diveintomark.org/archives/2009/01/07/give-part-4-captioning#srt"&gt;SubRip&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="http://diveintomark.org/archives/2009/01/07/give-part-4-captioning#ass"&gt;SubStation Alpha&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="http://diveintomark.org/archives/2009/01/07/give-part-4-captioning#mp4tt"&gt;MPEG-4 Timed Text&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="http://diveintomark.org/archives/2009/01/07/give-part-4-captioning#sami"&gt;SAMI&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="http://diveintomark.org/archives/2009/01/07/give-part-4-captioning#smil"&gt;SMIL&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h3&gt;&lt;a href="http://en.wikipedia.org/wiki/SubRip"&gt;SubRip&lt;/a&gt;&lt;/h3&gt; &lt;p&gt;SubRip is the &lt;a href="http://diveintomark.org/archives/2008/12/18/give-part-1-container-formats"&gt;AVI&lt;/a&gt; of caption formats, in the sense that its basic functionality is supported everywhere but various people have tried to extend it in mostly incompatible ways and the result is a huge mess. As a standalone file, SubRip captions are most commonly seen with a &lt;code&gt;.srt&lt;/code&gt; extension. SubRip is a text-based format which can include font, size, and position information, as well as a limited set of HTML formatting tags, although most of these features are &lt;a href="http://ale5000.altervista.org/subtitles.htm"&gt;poorly supported&lt;/a&gt;. Its “official” specification is &lt;a href="http://forum.doom9.org/showthread.php?p=470941#post470941"&gt;a doom9 forum post from 2004&lt;/a&gt;. Most players assume that &lt;code&gt;.srt&lt;/code&gt; files are encoded in Windows-1252 (what Windows programs frequently call “ANSI”), although some can detect and switch to UTF-8 encoding automatically.&lt;/p&gt; &lt;p&gt;Because &lt;code&gt;.srt&lt;/code&gt; files are so often &lt;a href="http://www.opensubtitles.org/en"&gt;published&lt;/a&gt; separately from the video files they describe, the most common use case is to put your &lt;code&gt;.srt&lt;/code&gt; file in the same directory as your video file and give them the same name (up to the file extensions). But it is also possible to embed SubRip captions directly into AVI files with &lt;a href="http://www.alexander-noe.com/video/amg/"&gt;AVI-Mux GUI&lt;/a&gt;, into MKV files with &lt;a href="http://www.bunkus.org/videotools/mkvtoolnix/doc/mkvmerge-gui.html"&gt;mkvmerge&lt;/a&gt;, and into MP4 files with &lt;a href="http://gpac.sourceforge.net/packager.php"&gt;MP4Box&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;You can play SubRip captions in Windows Media Player or other DirectShow-based video players after installing &lt;a href="http://www.videohelp.com/tools/VSFilter_DirectVobSub"&gt;VSFilter&lt;/a&gt;; in QuickTime after installing &lt;a href="http://www.perian.org/"&gt;Perian&lt;/a&gt;; on Linux, both &lt;a href="http://www.mplayerhq.hu/DOCS/HTML/en/index.html"&gt;mplayer&lt;/a&gt; and &lt;a href="http://www.videolan.org/vlc/"&gt;VLC&lt;/a&gt; support it natively.&lt;/p&gt; &lt;h3&gt;&lt;a href="http://en.wikipedia.org/wiki/SubStation_Alpha"&gt;SubStation Alpha&lt;/a&gt;&lt;/h3&gt; &lt;p&gt;SubStation Alpha and its successor, Advanced SubStation Alpha, are the preferred caption formats of the fansubbing community. As standalone files, they are commonly seen with &lt;code&gt;.ssa&lt;/code&gt; or &lt;code&gt;.ass&lt;/code&gt; extensions. They have &lt;a href="http://www.matroska.org/technical/specs/subtitles/ssa.html"&gt;a spec longer than three paragraphs&lt;/a&gt;. They are actually miniature scripting languages. A &lt;code&gt;.ass&lt;/code&gt; file contains a series of commands to control position, scrolling, animation, font, size, scaling, letter spacing, borders, text outline, text shadow, alignment, and so on; and a series of time-coded events for displaying text given the current styling parameters. It has support for multiple character encodings.&lt;/p&gt; &lt;p&gt;The playing requirements for SubStation Alpha captions are almost identical to SubRip. The same plugins are required for Windows and Mac OS X. On Linux, mplayer prides itself on having the most complete SSA/ASS implementation.&lt;/p&gt; &lt;h3&gt;&lt;a href="http://en.wikipedia.org/wiki/MPEG-4_Part_17"&gt;MPEG-4 Timed Text&lt;/a&gt;&lt;/h3&gt; &lt;p&gt;a.k.a. “MPEG-4 Part 17,” a.k.a. &lt;a href="http://www.iso.org/iso/iso_catalogue/catalogue_tc/catalogue_detail.htm?csnumber=39478"&gt;ISO 14496-17&lt;/a&gt;, MPEG-4 Timed Text (hereafter “MP4TT”) is the one and only caption format for the &lt;a href="http://diveintomark.org/archives/2008/12/18/give-part-1-container-formats"&gt;MP4 container&lt;/a&gt;. It is not a file format; it is only defined in terms of a track within an MP4 container. As such, it can not be embedded in any other video container, and it can not exist as a separate file. (Note: the last sentence was a lie; the MPEG-4 Timed Text format is really the 3GPP Timed Text format, and it can very much be embedded in a 3GPP container. What I meant to say is that the format can not be embedded in any of the other popular video container formats like AVI, MKV, or OGG. I could go on about the subtle differences between MPEG-4 Timed Text in an MP4 container and 3GPP Timed Text in a 3GPP container, but it would just make you cry, and besides, technical accuracy is for pussies.)&lt;/p&gt; &lt;p&gt;MP4TT defines detailed information on text positioning, fonts, styles, scrolling, and text justification. These details are encoded into the track at authoring time, and can not be changed by the end user’s video player. The most readable description of its features is actually &lt;a href="http://gpac.sourceforge.net/doc_ttxt.php"&gt;the documentation for GPAC&lt;/a&gt;, an open source implementation of much of the MPEG-4 specification (including MP4TT). Since MP4TT doesn’t define a text-based serialization, GPAC invented one for their own use; since their format is designed to capture all the possible information in an MP4TT track, it turns out to be an easy way to read about all of MP4TT’s features.&lt;/p&gt; &lt;p&gt;&lt;a href="http://gpac.sourceforge.net/packager.php"&gt;MP4Box&lt;/a&gt;, part of the GPAC project, can take an &lt;code&gt;.srt&lt;/code&gt; file and convert it into a MPEG-4 Timed Text track and embed it in an existing MP4 file. It can also reverse the process — extract a Timed Text track from an MP4 file and output a &lt;code&gt;.srt&lt;/code&gt; file.&lt;/p&gt; &lt;p&gt;On Mac OS X, QuickTime supports MP4TT tracks within an MP4 container, but only if you rename the file from &lt;code&gt;.mp4&lt;/code&gt; to &lt;code&gt;.3gp&lt;/code&gt; or &lt;code&gt;.m4v&lt;/code&gt;. &lt;a href="http://diveintomark.org/archives/2006/07/23/video-howto#qt7"&gt;I shit you not&lt;/a&gt;. (On the plus side, changing the file extension will allow you to sync compatible video to an iPod or iPhone, which will actually display the captions. Still not kidding.) On Windows, any DirectShow-based video player (such as Windows Media Player or &lt;a href="http://sourceforge.net/project/showfiles.php?group_id=205650"&gt;Media Player Classic&lt;/a&gt;) supports MP4TT tracks once you install &lt;a href="http://haali.cs.msu.ru/mkv/"&gt;Haali Media Splitter&lt;/a&gt;. On Linux, VLC has supported MP4TT tracks for several years.&lt;/p&gt; &lt;h3&gt;&lt;a href="http://en.wikipedia.org/wiki/SAMI"&gt;SAMI&lt;/a&gt;&lt;/h3&gt; &lt;p&gt;SAMI was Microsoft’s first attempt to create a captioning format for PC video files (as opposed to broadcast television or DVDs). As such, it is natively supported by Microsoft video players, including Windows Media Player, without the need for third-party plugins. It has &lt;a href="http://msdn.microsoft.com/en-us/library/ms971327.aspx"&gt;a specification on MSDN&lt;/a&gt;. It is a text-based format that supports a large subset of HTML formatting tags. SAMI captions are almost always embedded in an &lt;a href="http://diveintomark.org/archives/2008/12/18/give-part-1-container-formats"&gt;ASF container&lt;/a&gt;, along with Windows Media video and Windows Media audio.&lt;/p&gt; &lt;p&gt;Don’t use SAMI for new projects; it has been superceded by &lt;a href="http://en.wikipedia.org/wiki/Synchronized_Multimedia_Integration_Language"&gt;SMIL&lt;/a&gt;. For historical purposes, you may enjoy reading about &lt;a href="http://www.webaim.org/techniques/captions/windows/"&gt;creating SAMI captions and embedding them in an ASF container&lt;/a&gt;, as long as you promise to never, ever try it at home.&lt;/p&gt; &lt;h3&gt;&lt;a href="http://en.wikipedia.org/wiki/Synchronized_Multimedia_Integration_Language"&gt;SMIL&lt;/a&gt;&lt;/h3&gt; &lt;p&gt;SMIL (Synchronized Multimedia Integration Language) is not actually a captioning format. It is “an XML-based language that allows authors to write interactive multimedia presentations.” It also happens to have a &lt;a href="http://www.w3.org/TR/SMIL3/smil-timing.html"&gt;timing and synchronization module&lt;/a&gt; that can, in theory, be used to display text on a series of moving pictures. That is to say, if you think of SMIL as a way to provide captions for a video, you’re doing it wrong. You need to invert your thinking — your video and your captions are each merely components of a SMIL presentation. SMIL captions are not embedded into a &lt;a href="http://diveintomark.org/archives/2008/12/18/give-part-1-container-formats"&gt;video container&lt;/a&gt;; the video and its captions are referenced from a SMIL document.&lt;/p&gt; &lt;p&gt;SMIL is &lt;a href="http://www.w3.org/AudioVideo/"&gt;a W3C standard&lt;/a&gt;; the most recent revision, &lt;a href="http://www.w3.org/TR/SMIL3/"&gt;SMIL 3.0&lt;/a&gt;, was just published in December 2008. If you printed out the SMIL 3.0 specification on US-Letter-sized paper, it would weigh in at 395 pages. So don’t do that.&lt;/p&gt; &lt;p&gt;QuickTime supports &lt;a href="http://developer.apple.com/documentation/QuickTime/IQ_InteractiveMovies/quicktimeandsmil/chapter_10_section_1.html"&gt;a subset of SMIL 1.0&lt;/a&gt;. WebAIM provides a nice &lt;a href="http://www.webaim.org/techniques/captions/quicktime/"&gt;tutorial on using SMIL to add captions to a QuickTime movie&lt;/a&gt;.&lt;/p&gt; &lt;h3&gt;Further reading&lt;/h3&gt; &lt;ul&gt; &lt;li&gt;&lt;a href="http://joeclark.org/book/sashay/serialization/Chapter13.html"&gt;Multimedia Accessibility [Joe Clark]&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="http://www.webaim.org/techniques/captions/"&gt;Web Captioning Overview [WebAIM]&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="http://www.afterdawn.com/guides/archive/subtitle_formats_explained.cfm"&gt;Subtitle formats explained [AfterDawn]&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="http://www.opensubtitles.org/en/downloads"&gt;How to play subtitles [OpenSubtitles]&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="http://en.wikipedia.org/wiki/Subtitle_(captioning)"&gt;Subtitle (captioning) [Wikipedia]&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="http://en.wikipedia.org/wiki/Closed_captioning"&gt;Closed captioning [Wikipedia]&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="http://forum.doom9.org/showthread.php?t=62723"&gt;MP4 FAQ [doom9]&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="http://help.youtube.com/support/youtube/bin/answer.py?answer=100077&amp;amp;cbid=-evuehvvzg96r&amp;amp;src=cb&amp;amp;lev=answer"&gt;Adding/editing captions on Youtube videos&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt;
		</content>
		<author>
			<name>
				Mark
			</name>
		</author>
		<source gr:stream-id="feed/http://diveintomark.org/feed">
			<id>
				tag:google.com,2005:reader/feed/http://diveintomark.org/feed
			</id>
			<title type="html">
				dive into mark
			</title>
			<link rel="alternate" href="http://diveintomark.org/" type="text/html" />
		</source>
	</entry>
	<entry gr:is-read-state-locked="true" gr:crawl-timestamp-msec="1230670793982">
		<id gr:original-id="tag:diveintomark.org,2008-12-30:/archives/20081230200415">
			tag:google.com,2005:reader/item/5a93314e300a2106
		</id>
		<category term="user/16823450566733491518/state/com.google/read" scheme="http://www.google.com/reader/" label="read" /><category term="unfiled" scheme="http://diveintomark.org" /><category term="aac" scheme="http://diveintomark.org" /><category term="ac3" scheme="http://diveintomark.org" /><category term="audio" scheme="http://diveintomark.org" /><category term="dts" scheme="http://diveintomark.org" /><category term="GIVE" scheme="http://diveintomark.org" /><category term="mp3" scheme="http://diveintomark.org" /><category term="video" scheme="http://diveintomark.org" /><category term="wma" scheme="http://diveintomark.org" />
		<title type="html">
			A gentle introduction to video encoding, part 3: lossy audio codecs
		</title>
		<published>
			2008-12-30T20:04:15Z
		</published>
		<updated>
			2008-12-31T03:11:17Z
		</updated>
		<link rel="alternate" href="http://diveintomark.org/archives/2008/12/30/give-part-3-lossy-audio-codecs" type="text/html" />
		<content xml:base="http://diveintomark.org/archives/2008/12/30/give-part-3-lossy-audio-codecs" xml:lang="en" type="html">
			&lt;p&gt;[These notes will eventually become part of a tech talk on video encoding. &lt;a href="http://diveintomark.org/tag/give"&gt;List of all articles in this series&lt;/a&gt;.]&lt;/p&gt; &lt;p&gt;Unless you’re going to stick to films made before &lt;a href="http://www.filmsite.org/jazz.html"&gt;1927 or so&lt;/a&gt;, you’re going to want an audio track. A future article will talk about how to pick the audio codec that’s right for you, but for now I just want to introduce the concept and describe the playing field. (This information is likely to go out of date quickly; future readers, be aware that this was written in December 2008.)&lt;/p&gt; &lt;p&gt;Like &lt;a href="http://diveintomark.org/archives/2008/12/19/give-part-2-lossy-video-codecs"&gt;video codecs&lt;/a&gt;, &lt;i&gt;audio codecs&lt;/i&gt; are algorithms by which an audio stream is encoded. Like video codecs, there are &lt;i&gt;lossy&lt;/i&gt; and &lt;i&gt;lossless&lt;/i&gt; audio codecs. Today’s article will only deal with lossy audio codecs. Actually, it’s even narrower than that, because there are different categories of lossy audio codecs. Audio is used in many places where video is not (telephony, for example), and there is an entire category of &lt;a href="http://www.voip-info.org/wiki-Codecs"&gt;audio codecs optimized for encoding speech&lt;/a&gt;. You wouldn’t rip a music CD with these codecs, because the result would sound like a 4-year-old singing into a speakerphone. But you &lt;em&gt;would&lt;/em&gt; use them in an &lt;a href="http://www.asterisk.org/"&gt;Asterisk&lt;/a&gt; PBX, because bandwidth is precious, and these codecs can compress human speech into a fraction of the size of general-purpose codecs.&lt;/p&gt; &lt;p&gt;And that’s all I have to say about speech-optimized audio codecs. Onward…&lt;/p&gt; &lt;p&gt;As I mentioned in &lt;a href="http://diveintomark.org/archives/2008/12/19/give-part-2-lossy-video-codecs"&gt;part 2: lossy video codecs&lt;/a&gt;, when you “watch a video,” your player software is doing several things at once:&lt;/p&gt; &lt;ol&gt; &lt;li&gt;Interpreting the container format&lt;/li&gt; &lt;li&gt;Decoding the video stream&lt;/li&gt; &lt;li&gt;Decoding the audio stream and sending the sound to your speakers&lt;/li&gt; &lt;li&gt;Possibly decoding the subtitle stream as well. (Tomorrow’s article will be all about subtitle formats! I can hardly wait!)&lt;/li&gt; &lt;/ol&gt; &lt;p&gt;The &lt;i&gt;audio codec&lt;/i&gt; specifies how to do #3 — decoding the audio stream and turning it into digital waveforms that your speakers then turn into sound. As with video codecs, there are all sorts of tricks to minimize the amount of information stored in the audio stream. And since we’re talking about &lt;i&gt;lossy&lt;/i&gt; audio codecs, information is being lost during the recording → encoding → decoding → listening lifecycle. Different audio codecs throw away different things, but they all have the same purpose: to trick your ears into not noticing the parts that are missing.&lt;/p&gt; &lt;p&gt;One concept that audio has that video does not is &lt;i&gt;channels&lt;/i&gt;. We’re sending sound to your speakers, right? Well, how many speakers do you have? If you’re sitting at your computer, you may only have two: one on the left and one on the right. My desktop has three: left, right, and one more on the floor. So-called “&lt;a href="http://en.wikipedia.org/wiki/Surround_sound"&gt;surround sound&lt;/a&gt;” systems can have six or more speakers, strategically placed around the room. Each speaker is fed a particular &lt;i&gt;channel&lt;/i&gt; of the original recording. The theory is that you can sit in the middle of the six speakers, literally surrounded by six separate channels of sound, and your brain synthesizes them and feels like you’re in the middle of the action. Does it work? A multi-billion-dollar industry seems to think so.&lt;/p&gt; &lt;p&gt;Most general-purpose audio codecs can handle two channels of sound. During recording, the sound is split into left and right channels; during encoding, both channels are stored in the same audio stream; during decoding, both channels are decoded and each is sent to the appropriate speaker. Some audio codecs can handle more than two channels, and they keep track of which channel is which and so your player can send the right sound to the right speaker.&lt;/p&gt; &lt;p&gt;There are &lt;em&gt;lots&lt;/em&gt; of audio codecs. Did I say there were lots of video codecs? Forget that. There are &lt;a href="http://wiki.multimedia.cx/index.php?title=Category:Audio_Codecs"&gt;a metric fuck-ton of audio codecs&lt;/a&gt;. These are the ones you need to know about:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href="http://diveintomark.org/archives/2008/12/30/give-part-3-lossy-audio-codecs#mp3"&gt;MPEG-1 Audio Layer 3&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="http://diveintomark.org/archives/2008/12/30/give-part-3-lossy-audio-codecs#aac"&gt;Advanced Audio Coding&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="http://diveintomark.org/archives/2008/12/30/give-part-3-lossy-audio-codecs#wma"&gt;Windows Media Audio&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="http://diveintomark.org/archives/2008/12/30/give-part-3-lossy-audio-codecs#vorbis"&gt;Vorbis&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="http://diveintomark.org/archives/2008/12/30/give-part-3-lossy-audio-codecs#ac3"&gt;Dolby Digital&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="http://diveintomark.org/archives/2008/12/30/give-part-3-lossy-audio-codecs#dts"&gt;Digital Theater System&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h3&gt;&lt;a href="http://en.wikipedia.org/wiki/MPEG-1_Audio_Layer_3"&gt;MPEG-1 Audio Layer 3&lt;/a&gt;&lt;/h3&gt; &lt;p&gt;…colloquially known as “MP3.” If you haven’t heard of MP3s, I don’t know what to do with you. &lt;a href="http://www.walmart.com/catalog/catalog.gsp?cat=96469"&gt;Walmart sells portable music players&lt;/a&gt; and calls them “MP3 players.” &lt;em&gt;Walmart.&lt;/em&gt; Anyway…&lt;/p&gt; &lt;p&gt;MP3s can contain &lt;strong&gt;up to 2 channels&lt;/strong&gt; of sound. They can be encoded at different &lt;i&gt;bitrates&lt;/i&gt;: 64 kbps, 128 kbps, 192 kbps, and a variety of others from 32 to 320. Higher bitrates mean larger file sizes and better quality audio, although the ratio of audio quality to bitrate is not linear. (128 kbs sounds more than twice as good as 64 kbs, but 256 kbs doesn’t sound twice as good as 128 kbs.) Furthermore, the MP3 format allows for &lt;i&gt;variable bitrate encoding&lt;/i&gt;, which means that some parts of the encoded stream are compressed more than others. For example, silence between notes can be encoded at a very low bitrate, then the bitrate can spike up a moment later when multiple instruments start playing a complex chord. MP3s can also be encoded with a constant bitrate, which, unsurprisingly, is called &lt;i&gt;constant bitrate encoding&lt;/i&gt;.&lt;/p&gt; &lt;p&gt;The MP3 standard doesn’t define exactly how to encode MP3s (although it does define exactly how to decode them); different encoders use different psychoacoustic models that produce wildly different results, but are all decodable by the same players. The open source &lt;a href="http://lame.sourceforge.net/"&gt;LAME project&lt;/a&gt; is the best free encoder, and arguably the best encoder period for all but the lowest bitrates.&lt;/p&gt; &lt;p&gt;The MP3 format was standardized in 1991 and &lt;strong&gt;is patent-encumbered&lt;/strong&gt;, which explains why Linux &lt;del&gt;sucks&lt;/del&gt; can’t play MP3 files out of the box. Pretty much every portable music player supports standalone MP3 files, and MP3 audio streams can be embedded in any &lt;a href="http://diveintomark.org/archives/2008/12/18/give-part-1-container-formats"&gt;video container&lt;/a&gt;. Adobe Flash can play both standalone MP3 files and MP3 audio streams within an MP4 video container.&lt;/p&gt; &lt;h3&gt;&lt;a href="http://en.wikipedia.org/wiki/Advanced_Audio_Coding"&gt;Advanced Audio Coding&lt;/a&gt;&lt;/h3&gt; &lt;p&gt;…affectionately known as “AAC.” Standardized in 1997, it lurched into prominence when Apple chose it as their default format for the iTunes Store. Originally, all AAC files “bought” from the iTunes Store were encrypted with Apple’s proprietary DRM scheme, called &lt;a href="http://en.wikipedia.org/wiki/FairPlay"&gt;FairPlay&lt;/a&gt;. Many songs in the iTunes Store are now available as unprotected AAC files, which Apple calls “iTunes Plus” because it sounds so much better than calling everything else “iTunes Minus.” &lt;strong&gt;The AAC format is patent-encumbered&lt;/strong&gt;; &lt;a href="http://www.vialicensing.com/Licensing/AAC_fees.cfm"&gt;licensing rates are available online&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;AAC was designed to provide better sound quality than MP3 at the same &lt;i&gt;bitrate&lt;/i&gt;, and it can encode audio at any bitrate. (MP3 is limited to a fixed number of bitrates, with an upper bound of 320 kbs.) AAC can encode &lt;strong&gt;up to 48 channels of sound&lt;/strong&gt;, although in practice no one does that. The AAC format also differs from MP3 in defining multiple &lt;i&gt;profiles&lt;/i&gt;, in much the same way as &lt;a href="http://diveintomark.org/archives/2008/12/19/give-part-2-lossy-video-codecs#h264"&gt;H.264&lt;/a&gt;, and for the same reasons. The “low-complexity” profile is designed to be playable in real-time on devices with limited CPU power, while higher profiles offer better sound quality at the same bitrate at the expense of slower encoding and decoding.&lt;/p&gt; &lt;p&gt;All current Apple products, including iPods, AppleTV, and QuickTime support certain profiles of AAC in standalone audio files and in audio streams in an MP4 video container. Adobe Flash supports all profiles of AAC in MP4, as do the open source mplayer and VLC video players. For encoding, the FAAC library is the open source option; support for it is a compile-time option in mencoder and ffmpeg. (I’ll dive into all the different encoding tools in a future article.)&lt;/p&gt; &lt;h3&gt;&lt;a href="http://en.wikipedia.org/wiki/Windows_Media_Audio"&gt;Windows Media Audio&lt;/a&gt;&lt;/h3&gt; &lt;p&gt;…a.k.a. “WMA.” As you might guess from the name, Windows Media Audio was developed by Microsoft. The acronym “WMA” has historically referred to many different things: a lossless audio codec (”WMA Lossless”), a speech-optimized codec (”WMA Voice”), and several different lossy audio codecs (”WMA 1″, “WMA 2″, “WMA 7″, “WMA 8″, “WMA 9″, and “WMA Pro”). It is also (incorrectly) used to refer to the &lt;a href="http://diveintomark.org/archives/2008/12/18/give-part-1-container-formats"&gt;Advanced Systems Format&lt;/a&gt;, because WMA-encoded audio streams are usually embedded in an ASF container. Roughly speaking, the lossy audio codecs (WMA 1-9) compete with MP3 and low-complexity AAC; WMA Lossless competes with Apple Lossless and FLAC; WMA Pro competes with high-complexity AAC, Vorbis, AC-3, and DTS.&lt;/p&gt; &lt;p&gt;All the different codecs under the “WMA” brand are playable with Windows Media Player, which comes pre-installed on desktops and laptops running Microsoft Windows XP and Vista. Portable devices like the Zune and the &lt;a href="http://diveintomark.org/archives/2008/05/06/the-day-the-music-died"&gt;ironically named “PlaysForSure” devices&lt;/a&gt; can play WMA 1-9; stores that allow you to “purchase” WMA files generally encrypt them with a Microsoft-proprietary DRM scheme. The open source ffmpeg project can play WMA 1-9, and &lt;a href="http://www.flip4mac.com/"&gt;Flip4Mac&lt;/a&gt; offers a commercial &lt;a href="http://www.telestream.net/flip4mac-wmv/overview.htm"&gt;QuickTime component to encode and decode WMA audio on Mac OS X&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;WMA 1-9 support up to &lt;strong&gt;2 channels of sound&lt;/strong&gt;; WMA Pro supports up to &lt;strong&gt;8 channels of sound&lt;/strong&gt;. &lt;strong&gt;All WMA formats are patent-encumbered&lt;/strong&gt;; &lt;a href="http://www.microsoft.com/windows/windowsmedia/licensing/licensing.aspx"&gt;licensing information is available from Microsoft&lt;/a&gt;.&lt;/p&gt; &lt;h3&gt;&lt;a href="http://en.wikipedia.org/wiki/Vorbis"&gt;Vorbis&lt;/a&gt;&lt;/h3&gt; &lt;p&gt;…known to many as “Ogg Vorbis,” although for some reason that pisses off both Ogg and Vorbis advocates. (Technically, “Ogg” is a container format, and Vorbis audio streams can be embedded in other containers.) &lt;strong&gt;Vorbis is not encumbered by any known patents&lt;/strong&gt; and is therefore supported out-of-the-box by all major Linux distributions and by portable devices running the open source &lt;a href="http://www.rockbox.org/"&gt;Rockbox&lt;/a&gt; firmware. Mozilla Firefox 3.1 will support Vorbis audio files in an Ogg container, or Ogg videos with a Vorbis audio track. &lt;a href="http://code.google.com/android/"&gt;Android&lt;/a&gt; mobile phones can also play standalone Vorbis audio files. Vorbis audio streams are usually embedded in an Ogg container, but they can also be &lt;a href="http://samples.mplayerhq.hu/MPEG-4/vorbis-in-mp4/"&gt;embedded in an MP4&lt;/a&gt; or &lt;a href="http://en.wikipedia.org/wiki/Matroska"&gt;MKV&lt;/a&gt; container (or, with some hacking, &lt;a href="http://www.alexander-noe.com/video/amg/"&gt;in AVI&lt;/a&gt;).&lt;/p&gt; &lt;p&gt;There are open source Vorbis encoders and decoders, including &lt;a href="http://oggconvert.tristanb.net/"&gt;OggConvert&lt;/a&gt; (encoder), &lt;a href="http://www.ffmpeg.org/"&gt;ffmpeg&lt;/a&gt; (decoder), &lt;a href="http://www.geocities.jp/aoyoume/aotuv/"&gt;aoTuV&lt;/a&gt; (encoder), and &lt;a href="http://downloads.xiph.org/releases/vorbis/"&gt;libvorbis&lt;/a&gt; (decoder). There are also &lt;a href="http://www.xiph.org/quicktime/"&gt;QuickTime components for Mac OS X&lt;/a&gt; and &lt;a href="http://www.xiph.org/dshow/"&gt;DirectShow filters for Windows&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;Vorbis supports &lt;strong&gt;an arbitrary number of sound channels&lt;/strong&gt;.&lt;/p&gt; &lt;h3&gt;&lt;a href="http://en.wikipedia.org/wiki/Dolby_Digital#Dolby_Digital"&gt;Dolby Digital&lt;/a&gt;&lt;/h3&gt; &lt;p&gt;…a.k.a. “AC-3.” AC-3 was developed by &lt;a href="http://www.dolby.com/index.html"&gt;Dolby Laboratories&lt;/a&gt;. AC-3 is most well-known for being a mandatory format in the DVD standard; all DVD players must be able to decode AC-3 audio streams. It is also mandatory for Blu-Ray players, and many digital TV broadcasts send AC-3 audio streams as well. AC-3 supports &lt;strong&gt;up to 6 channels of sound&lt;/strong&gt; and bitrates of &lt;strong&gt;up to 640 kbps&lt;/strong&gt;, although its most popular application — audio on DVDs — is officially limited to 448 kbps. (Blu-Ray discs may use the maximum 640 kbps.)&lt;/p&gt; &lt;p&gt;There are open source encoders and decoders for AC-3, including &lt;a href="http://liba52.sourceforge.net/"&gt;liba52&lt;/a&gt; (decoding), &lt;a href="http://ac3filter.net/"&gt;AC3Filter&lt;/a&gt; (decoding), and &lt;a href="http://aften.sourceforge.net/"&gt;Aften&lt;/a&gt; (encoding). ffmpeg has a compile-time option to include liba52, which will allow all ffmpeg-based players and plugin chains (like GStreamer) to play AC-3 audio streams. However, &lt;strong&gt;the AC-3 format is patent-encumbered&lt;/strong&gt;; licensing is brokered by &lt;a href="http://www.dolby.com/professional/getting-dolby-technologies/"&gt;Dolby Laboratories&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;AC-3 is rarely seen in standalone audio files; it is designed to be embedded in a video container. Other than DVDs and Blu-Ray discs (which use a video container format I haven’t talked about yet), you can embed AC-3 audio streams in MKV, AVI, and — just standardized earlier this year — &lt;a href="http://webapp.etsi.org/WorkProgram/Report_WorkItem.asp?WKI_ID=28541"&gt;in MP4 files&lt;/a&gt; (&lt;a href="http://forum.doom9.org/showthread.php?p=1168961#post1168961"&gt;discussion&lt;/a&gt;). Apple’s AppleTV set-top box is the only hardware device I know of that supports AC-3 in MP4; you can encode AppleTV-compatible AC3-in-MP4 videos with &lt;a href="http://handbrake.fr/"&gt;HandBrake&lt;/a&gt;, or manually insert AC-3 audio into existing MP4 files with &lt;a href="http://mp4creator.sourceforge.net/"&gt;this Windows-only fork of mp4creator&lt;/a&gt;.&lt;/p&gt; &lt;h3&gt;&lt;a href="http://en.wikipedia.org/wiki/DTS_(sound_system)"&gt;Digital Theater System&lt;/a&gt;&lt;/h3&gt; &lt;p&gt;…a.k.a. “DTS.” As you might guess from the name, DTS is designed for real-life movie theaters. Like WMA, “DTS” is a brand name for a family of different audio formats. The “core” DTS format supports &lt;strong&gt;up to six channels&lt;/strong&gt;; later extensions like DTS-HD support &lt;strong&gt;up to eight channels&lt;/strong&gt;. There is also &lt;a href="http://en.wikipedia.org/wiki/DTS-HD_Master_Audio"&gt;DTS-HD Master Audio&lt;/a&gt;, a lossless variant by the same company. Core DTS is designed for high bitrates (&lt;strong&gt;up to 1536 kbps&lt;/strong&gt;, which is virtually indistinguishable from being there in the first place). DTS-HD Master Audio bitrates can go even higher, although at some point even audiophiles will wonder why they should bother.&lt;/p&gt; &lt;p&gt;Core DTS was not originally part of the DVD specification, so early DVD players did not support it. Most recent DVD players support natively decoding core DTS audio or passing the audio stream through to an external speaker system which decodes it, but relatively few DVDs include a DTS stream due to size constraints. Core DTS &lt;i&gt;is&lt;/i&gt; a mandatory part of the Blu-Ray specification, and many Blu-Ray discs include a DTS audio track — sometimes the exact same stream that was originally played in the movie theater. (DTS-HD Master Audio is an optional part of the Blu-Ray specification, but few Blu-Ray discs include it due to — you guessed it — size constraints.)&lt;/p&gt; &lt;p&gt;&lt;strong&gt;DTS is patent-encumbered&lt;/strong&gt;; licensing is brokered by &lt;a href="http://www.dts.com"&gt;DTS, Inc&lt;/a&gt;.&lt;/p&gt; &lt;h3&gt;And so forth and so on&lt;/h3&gt; &lt;p&gt;As with everything else in this series, this article barely scratches the surface. (Really!) If you like, you can read about other audio codecs: &lt;a href="http://en.wikipedia.org/wiki/Adaptive_Transform_Acoustic_Coding"&gt;ATRAC&lt;/a&gt;, &lt;a href="http://en.wikipedia.org/wiki/Musepack"&gt;Musepack&lt;/a&gt;, &lt;a href="http://en.wikipedia.org/wiki/MP2_(format)"&gt;MP2&lt;/a&gt;, &lt;a href="http://en.wikipedia.org/wiki/RealAudio"&gt;RealAudio&lt;/a&gt;, &lt;a href="http://en.wikipedia.org/wiki/Adaptive_Multi-Rate"&gt;AMR&lt;/a&gt;, &lt;a href="http://en.wikipedia.org/wiki/ADPCM"&gt;ADPCM&lt;/a&gt;, and so forth and so on. Wikipedia has a &lt;a href="http://en.wikipedia.org/wiki/Comparison_of_audio_codecs"&gt;comparison of common audio codecs&lt;/a&gt;, &lt;a href="http://wiki.hydrogenaudio.org/index.php?title=Category:Codecs"&gt;HydrogenAudio has lots of technical details&lt;/a&gt;, and &lt;a href="http://wiki.multimedia.cx/index.php?title=Category:Audio_Codecs"&gt;wiki.multimedia.cx is always your friend&lt;/a&gt; too.&lt;/p&gt; &lt;p&gt;Tomorrow: subtitles!&lt;/p&gt;
		</content>
		<author>
			<name>
				Mark
			</name>
		</author>
		<source gr:stream-id="feed/http://diveintomark.org/feed">
			<id>
				tag:google.com,2005:reader/feed/http://diveintomark.org/feed
			</id>
			<title type="html">
				dive into mark
			</title>
			<link rel="alternate" href="http://diveintomark.org/" type="text/html" />
		</source>
	</entry>
</feed>
